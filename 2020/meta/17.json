{"presenter": "Carol Willing", "title": "Contributing to Core Python", "year": "2020", "transcript_md": "17-carol-python.md", "meetup_url": "https://www.meetup.com/data-umbrella/events/273988042/", "yt_video_id": "Pkg-DKkObKs", "slides_url": "https://speakerdeck.com/willingc/contributing-to-core-python", "repo_url": "N.A.", "notebook_url": "N.A.", "transcriber": "?", "extra_references": "## Reference Links\n- Python on Discourse:  https://discuss.python.org/c/welcome/12 \n- Carol's PyCon 2015 talk:  https://www.youtube.com/watch?v=szeo1XgmuEk \n- Contributing to scikit-learn:  https://www.dataumbrella.org/open-source/contributing-to-scikit-learn \n- Book recommendation, High Performance Python:  https://www.oreilly.com/library/view/high-performance-python/9781492055013/ \n", "video_href_w": "25%", "video_href": "http://www.youtube.com/watch?feature=player_embedded&v=Pkg-DKkObKs", "video_href_src": "", "video_href_alt": "Carol Willing: Contributing to Core Python", "formatted_transcript": "hello everyone thank you for joining\nour webinar for today uh thanks for\njoining data umbrella\ni'm gonna do a quick introduction uh\ncarol willing is going to do her talk\nand we'll have a q a\nsession at the end and and this webinar\nis being recorded\na little bit about me i'm a statistician\ndata scientist i'm the founder of data\numbrella\nand i am on twitter linkedin github has\nraised my s\nfeel free to follow me\nwe have a code of conduct we're\ndedicated to providing harassment free\nprofessional\nrespectful experience for everyone this\napplies to the chat\nas well um thank you for helping make\nthis\na welcoming and friendly community for\nall of us\nabout data umbrella we're an inclusive\ncommunity for underrepresented persons\nin data science\nwe welcome allies to join us and we are\na volunteer run organization\nso how can you support data umbrella the\nfirst and foremost is to follow our code\nof conduct\num the second is we have a discord\ncommunity chat so\nfeel free to join it the link is on our\nwebsite and there you can ask questions\nand answer questions as well for the\ncommunity we have an open collective\nfeel free to also if you want to donate\nthere to cover our meetup dues and other\noperational costs\nand we have a new initiative called you\nknow we're\ndoing transcripts for all of our talks\nand\nit is um the transcripts are on github\nand it requires knowing some mark down\nand how to submit a pr either via\nterminal or github\num so check out this link github.com\ndata umbrella event transcripts for more\ninformation\nwe also have a job board which is under\njobs.dataumbrella.org\nif you are looking for a position or\njust curious feel free to check it out\nwe have two highlighted jobs today the\nfirst is a software engineer position at\noscar health which is based in new york\ncity\nit's a health insurance company and\nthey are developing seamless technology\nand provide personalized support to\nmembers to navigate their health care\nand they have some other roles open as\nwell so\nbut check it out our next job that we're\nhighlighting is a\nmachine learning engineer by development\nc that they are based\nin washington dc or lisbon portugal or\nit can be a remote position for now and\num what they do is they're mapping\nelections from afghanistan to the us\nanalyzing public data and economic data\nand leading strategy and development\nbehind data.world bank\nand other um other\nsocial enterprise initiatives\num these are just uh um\njust a sprinkling of what we have\navailable on our website there's a lot\nof resources on responsibility on\naccessibility on open source so\ncheck that out on your own\nwe have a monthly newsletter it is\ndataumbrella.substack.com so feel free\nto sign up for it we only send it out\nonce a month so\nwe promise not to spam you with too much\nemail\nwe are on date umbrella is on a bunch of\ndifferent platforms under data umbrella\nso depending on what your preference is\num the best place to actually be a\nmember is\nthe meetup group because that's where\nall the events are posted\nour website has resources we are on\ntwitter\nwe are on linkedin we are on youtube if\nyou want to subscribe to our channel\ni will post some of these links once i\nfinish this\nintro presentation on the chat so you\ncan follow it\nand before we begin i just want to let\nyou know that next week where our\nupcoming event is using streamlit for\ndata science with thomas fan\nthomas is also a core contributor to\nscikit learn\nand streamlit is a way to build and\nshare\ndata apps in python and i think it's\ngoing to be a great presentation\nand i'm so glad that um thomas said yes\nwhen i invited him and asked him\na little bit about today's speaker carol\nwilling\ncarol has an msn management from mit and\na bsc in electrical engineering from\nduke university\nshe is a core developer of core python\nshe is a member of python's steering\ncouncil\nfor project jupiter jupiter notebook um\nas\nmany of us have used she's on the\nsteering council and works as a core\ndeveloper on jupiter health and mybinder\nshe is also co-editor of the journal of\nopen source education\nand she co-authored an open source book\nteaching and learning with jupiter\nthere's a lot more that carol has\naccomplished but i was running out of\nspace\nso i will let um carol\ntake it over from here oh and and just\njust one more thing we have a q a tab on\nthis platform so if you have any\nquestions just post them there\nif you do post them on the chat it's not\na problem i can easily move them over to\nq\na and if you want to upvote them um you\nknow\ni think we'll have time to answer\neveryone's questions but\nfeel free to upload to see what's really\num exciting and important for you\nand i will hand it over to carol thanks\nrussian\nthank you all for being here and thank\nyou for the sponsors\nand everybody who organizes groups um\nit's really important and it helps us as\nan ecosystem gets stronger\ni am going to start sharing my screen\nhopefully and\nonce roshama lets me know that you guys\ncan see everything\nthen i will start\nthere was a little bit of a lag before\nbut\num okay well i'm going to assume you can\nsee my slide deck otherwise\num somebody please shout um so today\ni'm going to talk about contributing to\ncore python\nbut i'm going to do it from the lens of\na scientist or a data scientist so it's\ngoing to be my opinionated view\nof working in all of these communities\nand for those that are advanced users\nyou will find something useful in this\nfor those of you that have never\ncontributed to open source\nyou should also find a lot of really\nuseful stuff\nas roshama went through my bio\nthe ending part talked about education\nand using tools and that is really where\nmy heart\nand passion is less about the technology\nand more about building tools that\nempower other people to do good things\nin the world\nand um i think our\nscience and data science ecosystem helps\nus do that really well\nso let's get started so\num yes core python and c python\nare the same thing you will hear them\nused interchangeably\nand for all intents and purposes you can\njust assume that they are actually the\nsame\num so for today's talk\nwe're going to look at this from a data\nand science perspective so the primary\naudience is data scientists scientists\ndata engineers\nbut other folks that might get value out\nof this\nare computer science compiler engineers\noperating system experts language\ngeeks but that won't be the focus of the\ntalk\nit will be the data folks and science\nfics\nokay\nso contributing to core python today\ni'm going to walk a little bit through\nhow core python is organized today\nthen i'm going to compare it to other\nopen source projects in our ecosystem of\ndata and science\nscikit-learn is a great example of that\nand then we'll talk about getting\nstarted\nand how you can go further with your\ncontributions to either see python\nopen source your local community and\nmore\nso we had an interesting thing happened\na couple of years ago\ngita van rossum who had been the\nbenevolent dictator for life of python\nstepped down and we were faced with\nhaving to\ncreate a new governance for core python\nand what we came up with was a small\nsteering council\nthese are the members currently who sit\non the steering council\nand really we are\nto sort of do and set the direction of\nthings that guido did\nby himself in terms of organization in\nthe project\nand direction of the project and\nin specific we are tasked with\nensuring the quality and stability of\nthe language\nmoving towards contributions that are\naccessible\ninclusive and sustainable fostering a\nstronger relationship\nwith the python software foundation\num continuing to facilitate the\ndecision-making process for\npeps which are python enhancement\nproposals those are\nwhen there are large changes made to the\nlanguage or proposed to the language or\nworkflow\nthat's something that um is open for\neverybody to read\nand comment on and our goal is\nto seek consensus both with each other\nbut\nalso the community at large because we\ndon't want to be\na dictator of the direction of python\nso as we look at core python\nwhat kinds of contributions are needed\nlots um but i want to first step back\nand look at the python software\nfoundation\nwhich is a sister organization to\nthe core python developers\nyeah and yeah sorry just we don't\nwe see you but we don't see your slides\nuh-oh\nso um maybe if you can just share again\nmaybe let me stop sharing and re-sharing\nyeah that might that might work\nah that might work\nlet's see if escape will do it worked in\npractice\nright let's do it again\nokay now you should see my whole desktop\nis that correct\nokay it takes just a couple of seconds\nfor the lag it is loading which is\ngood and now we can see your whole\ndesktop yep\nand now you should be able to see the\ntalk yep now we can see the talk and we\ncan see you\nokay so speed version the title of the\ntalk\ncore python opinionated guide for\nscientists and data scientists yes core\npython is the same thing as see\npython i'm targeting this to the\nscientists and data scientists and data\nfolks in the audience\nwe're going to go through a few\ndifferent ways of contributing to core\npython\nand beyond i started with a quick\ndiscussion of governance or introduced\nthe steering council\nwhat the steering council is responsible\nfor\nand now back to you which contributions\ndoes see python need and\nlooking at the mission of the python\nsoftware foundation\nis a good place to start the python\nsoftware foundation\nis a sister organization to the core\npython group\nand its goal is to promote protect and\nadvance\npython the language as well as to grow\na diverse and international community of\npython programmers\nso as you think of making contributions\nkeep that in the back of your head\nbecause those are really going to be the\nmost\nvaluable contributions\nsome ways you can contribute and\noftentimes people look at writing new\ncode as the only way to contribute\nand it is a great way to contribute but\nin many ways a lot of these other ways\nto contribute\nare equally if not more important um\nwhen you're adding new code it's got to\nbe with backward compatibility\nwe're a 30 year old language you know\npeople don't are using this in\nproduction they don't want things\nbreaking\nmaintaining security anything that you\ncan do to maintain the security of the\nlanguage\nor improve core development workflows so\nmariada has put together a lot of bots\nthat make our core development workflow\nmuch easier for folks to get started\nand also for github and the power of\ntechnology to kind of help with some of\nthe\nmore tedious tasks writing and running\ntests writing and editing documentation\nboth of those are absolutely critical to\nthe success of\nany open source project python as well\num one huge need we have is folks to\ntriage\nbugs for reproducibility\nand um in addition to that\npeople to review open prs um\nright now we're split um our code base\nis on github\nbut our bug issue tracker is on\nbugs.python.org\nso um there's sort of an extra step\nbetween the two\nso um it it's helpful um\nwith uh decreasing the backlog of\nuh prs and bugs for people to help\num triage and review prs and\nin the last year we've actually started\na triaging team\nwhich is in many ways a stepping stone\nto core development\num and then really anything that you\ndo to share your knowledge with the\ncommunity\nmaintain projects give talks write blog\nposts attend meetups\nthat is a contribution to core python\nso congratulations you've all made your\nfirst contribution to core python\nor at least the python ecosystem\nso i'm going to spend a minute comparing\nthe different projects and comparing and\ncontrasting\npython versus other projects that are\nyounger\nlike jupiter matplotlibs scikit-learn\nand more\nso what's similar well most of these\nprojects\nuse a github workflow and with that i\nmean\nwe host our source code on github or\ngitlab and\nwe operate with a pull request\nmindset and what that means is a pull\nrequest is\nhey i would like you to take my\ncode and add it to your code base\nand then a maintainer will either say\nyes that sounds like a great idea i\naccept it\nor gee could you make these um changes\nand then resubmit it or in some cases\nwhen\nit's just not an appropriate\ncontribution we might say you know what\nthis would be better as a third party\nproject\nor um another project\nall projects have code review and that's\nwhen\nmaintainers and core developers look\nthrough code that's being submitted or\ndocumentation that's being submitted\nand make suggestions hopefully very\nkindly\nabout what could be changed or improved\nand many strong projects have\nautomated testing and continuous\nintegration\nand it's really valuable to have that as\npart of your project\nbecause it provides sort of an\nindependent\nview of what's going on so as a\ncontributor\nit sort of provides you guidance okay\ni've done like the correct syntax or\nformatting if i'm submitting\ncode or documentation and\none thing that i forgot to mention but\nis really important\nis healthy open source projects have\nnot only a code of conduct but also\nan onboarding guide or a developer guide\nthat helps\nnew contributors get started and helps\nexisting contributors build their skills\nso what differs well there's a fair\namount of stuff that\ndiffers between see python and other\ndata science projects like jupiter\nand jupiter hub and binder that i've\nbeen involved with\num and one of the most important or\nbiggest ones\nis the velocity at which new features\nare\nadded to the project python's a 30-year\nlanguage\nhas a long history and a lot of code\nout in the wild that are being used in\nproduction\nin scientific research and as such\nwe can't just go and change things\nas quickly as we could in\na newer project because we have more\nembedded users\nthe other thing that's different about\ncore python\nis it's a language that's used far\nbeyond just data and science so\nnot only do we have to status the data\nsatisfy the data and science community\nbut we also have communities around web\ndevelopment sys admin\ndevops embedded systems\nteaching and so forth\nso when we look at python\nwe're looking at okay how do we keep\nstability\nand backward compatibility and security\nwhile adding new features and in many of\nthese\nother scientific projects it's a bit\nflipped\nwe're looking for adding new features\nwhile also creating you know a stable\num though often changing environment we\nmight\nuh deprecate things which is stop\nusing things or offering things in a\ntwo-year window\nwhere python it would be much longer\ncould be five years could be ten years\num and then the context in which these\nprojects are used is also different\num see python is a tool that we use\nto build things and it's a\ntool that is used as a foundation\nfor many of these projects like jupiter\nor matplotlib\nto create their own project\nso the stability of c python is critical\nto the stability of our entire data and\nscience\necosystem because what we don't want to\ndo when we make a new python release\nis break a whole bunch of other projects\nand so um yeah so that should give you a\nsense\nof the fact that python's going to move\na little slower\nreally emphasize code and quality and\nsecurity whereas some of these\nscientific\nand data science projects are going to\nmove much quicker and\nyou'll see a lot of change in even a\nyear or two years\nso how do you get started contributing\nor if you're already contributing how do\nyou continue\nand perhaps grow your skills\nwell if you're a first time contributor\nto open source\ni want to strongly encourage you to\nconsider making your first contribution\nbe a contribution to a project in the\nscientific\ndata science community and i'm going to\ngo\nso far since it's my opinionated talk to\nsay\ni would encourage you to do that\nover making c python your first\ncontribution and the reason why is\nyou will find going back to the\ndifferences between\nthe projects and python language the\nvelocity of change is much higher\nin these projects like scikit-learn so\nit actually winds up\nbeing a way to learn\nwhile doing and make an impact\nwhile you're learning which is much\nharder to do\nin see python and i\nhighly encourage you to go watch both of\nthese or read the transcripts\nthey're excellent so\nas you get ready to contribute\nto see python and this would apply to\nmost open source projects as well\nyou want to kind of get into a mindset\nthat will set you up for success\nand one of the first things you can do\nis sort of\ncheck your intent or\nreally identify why you want to\ncontribute\num and the reason i say that is when\nthings get bumpy\nalong the way um it's easier to\npersist in the process when you\nhave clear goals of what you're trying\nto accomplish\nand why and i would\nencourage you to think about your\ninitial impact\nand initial scope keep it small\nit's much easier to start small and then\nwork up to big\nand i want to also say that\npatience is probably one of the best\nthings that\nyou can have along with communication\nskills\nin open source most projects\nare run by volunteers the vast majority\nof core developers foresee python\nare volunteers all the stuff i do is\nas a volunteer on my time notable gives\nme\na lot more latitude than most companies\nto work on open source but it's not my\nprimary\njob and there's less than\na handful of folks within the core\ndevelopment team where it is their\nprimary job\nall right so you've got the right\nmindset you're setting yourself up for\nsuccess\nwhat are some of the common reasons that\npeople contribute to open\nsource and these are just a few of many\nyou're using a project whether it's a\nscientific python project\nand you hit a bug and that bug possibly\nis related to something in c python so\nyou might want to fix\nsomething in c python to make your other\nproject\nrun better you might\nhave come across something that\nperplexed you\nor was complicated to learn so you might\nwant to improve the documentation so the\nnext person doesn't have to go through\nthe same\nprocess a lot of people just think it\nwould be cool to contribute to python\nwhich is\na totally valid reason um\nmany people want to just understand more\nabout how things work\nand um to strengthen\ntheir development skills so this is just\na small subset\nbut um some things that come up time and\nagain\nso your most important research\nresource when contributing to core\npython is what we call the dev guide\num and it's located at\ndevguidepython.org\nit is a comprehensive\nguide to contributing to python um\nand it's maintained by the core\ndevelopers that also maintain the\nlanguage\nit is pretty much everything you ever\nwanted to know about contributing\nto python and then some as\nsuch there is a quick reference guide\nwhich\nis really a great place to start and\nwe'll talk about it um\nin a little bit but there's also things\nabout\nhow to submit a pull request how to get\nhelp\nhow to run tests and many other\nresources so\nthis is sort of your one stop if you\nwill um\ntowards getting started and many other\nprojects have something\nsimilar perhaps not as long but um yeah\nso some other helpful prerequisites\nthat will improve your contribution\nexperience to see python\nis to take a little time to understand\nsee python's culture\nand\nthat can be um\nthere are there's different aspects of\nthe culture\nbecause we have people that have\nyou know been with the python language\nfor 30 years\nversus are relatively new in the last\nfive years to\ncore python you're going to have people\nwith different perspectives\nand different work styles within the\nlanguage\npersonally i spend a lot of time\nlooking at discourse which is\ndiscussed.python.org\nand less time looking at mailing lists\npartially because i find more value in\ndiscourse than in the mailing list\nbut there's a lot of core developers\nthat do the reverse so\num and then i also spend a lot of time\nlooking at\nthe pull requests and the code itself\nso understanding the culture and where\nto find information\nand how the pace at which things\nhappen is really important\nalso understanding the difference\nbetween the core\nlanguage and the standard library\nthe core language is a smaller subset of\nwhat\nyou would think of as core python and\nthen the standard library is\nactually many other smaller libraries\nthat provide additional functions that\ngave python the batteries included um\nname and um core python core lang the\ncore language is really things like data\ntypes\nand really the fundamentals that you\nwould have in any\nsoftware development language again\ni can't reiterate enough that core\ndevelopers\nare volunteers and um\nbe kind um many of us are wearing many\ndifferent hats\non the flip side the core developers\nshould be kind to you\nas well so we do have a code of conduct\nand\nyou know i encourage you if you're\nseeing behavior that is not\nprofessional please let folks know\num understanding git and github workflow\nis i think very important for\ncontributing to\ncore python at the point where people\nare contributing to core python\nthe general assumption in the community\nis that you have\num basic git and github workflow\nexperience and understanding\nand if you jump back to where i said\noh i i am encouraging you to\nalso consider contributing to other data\nscience and science libraries\npartially it's because those projects\ntend to be a little bit\ngentler with new contributors that are\nstill learning git\nand github and there's\nlots of information out there about\ndoing it um\nsoftware carpentry or the carpentries\nhave a great guide\nand um there's a talk which maybe we can\nlink to\nin the future unfortunately it wasn't\nrecorded but a slide deck\nthat i put together gosh probably 2016\nfor complete beginners at writespeak\ncode\nwho are learning git and github and it\nreally\nis a very gentle introduction to both\nbut um\nhas been very popular and then\nthe other prerequisite is some\nfamiliarity of python\num it's not necessary to know c it's not\nnecessarily to know c\nplus so most of the language is written\nin python\nso you can be very effective without\nreally understanding much if at all\nfrom c or c plus plus\nso that's a lot to digest\nand i wanna um for those of you that\nwant a great exercise um later\nor when you're ready um i wanna\njust give you the brief directions on\nhow to build\ncore python from source and\num people often think it's a really\nsuper complicated process and\num the quick reference guide in the dev\nguide\nactually runs through these steps\nthere may be some subtleties based on\nthe operating system that you're running\nbut essentially what you're going to do\nis\nfork and clone the source code from\ngithub which is at python c python\nthen you're going to use a c compiler\nand most of the time c compiler is kind\nof available with your operating system\nto configure and build python um\nit's one command to configure and build\nit\nwith unix linux and mac\num make is what will actually\ndo the actual building\nand then windows there's a\nbat file that combines those same steps\nso\nto configure and build python is one\nstep\nso what would you want to do as you're\nstarting well\na good place is just to run the tests\nand\nagain like building and config\nand configuring python it's one\nline of code and there are\nthis should look pretty familiar with\nfolks that have done python\nit's just basically executing the test\nlibrary so um\nthere you go you have now learned how to\nbuild\nconfigure and run tests for python\num the dev guide will definitely give\nyou\nadditional questions and answers on how\nto\ncontribute um again remember\nchanges to the language are submitted as\ngithub pull requests\nour continuous integration will run\nthe automated tests just like you're\nrunning them locally\nit will run them in an automated way\nacross all\noperating systems and a number of\ndifferent versions of python\nthe next step in the process if you\nsubmit a pr\nwould be to wait for some review from a\ncore developer or\na contributor address the feedback\nas appropriate and hopefully then\nyou will have a final core developer\nreview\nand if luck will have it um it'll be\nmerged into the code base\nand um folks can use it from then on\nfor those of you that want to go deeper\nin your understanding of see python\nthere is a wonderful blog post\nwhich is now a book by anthony shaw\nabout a guide to see python source code\nit is the most accessible yet highly\ntechnical\num explanation of how see python\nworks um you know down to the\nlowest levels um in fact it was so good\nthat when it first came out\ni took the entire uh blog post\ncopied it all had it bound\num in a spiral you know thing\nso that i could refer to it on a\nday-to-day basis and\ni encouraged anthony to write a book\nbased on it and he did\nso we're very lucky that there's many\nways of accessing his materials and he's\nalso\na very prolific speaker\nso there's lots of stuff on youtube as\nwell\nanother great resource um\nfor learning about python i don't know\nif you can see\nme or if you're just seeing my slides\nbut there is a book\ncalled high performance python by misha\ngorlach\nand ian oswald and it is um\ni think an outstanding book for\nuh both learning python and how it\nis built and comes together but also\nthe things you can do to improve\nthe performance of python um\none of the things you might hear in the\nmedia is python is slow\npython you know isn't performant because\nthere is this global interpreter lock or\ngill\nand the global interpreter lock or gill\nwhat it does is it\nlimits at certain points the\nprocessing to one\nthread if you will at a time and\nthat tends to be a bottleneck because\nright now we have many multi-core\nprocessors and things like that\nyou'd want to use all that and not have\nto bottleneck\ninto things but this high performance\npython it runs through things like\nhow to profile your code how to\nuse multi-processing how to use cython\nwhich is a great project in our\necosystem\nin terms of that allows us to do a lot\nof more\ncpu intensive stuff i believe it also\ncovers number\nwhich is also another great project that\nkind of\nuh uses just entire time compilation\nto get around the gill\nso yeah there's lots of ways you can\nimprove your performance\nand these two resources are just some of\nthe many that are out there\nin addition to those resources um there\nare\nmany core developers keep websites that\nhave a lot of um\ntechnical content victor stinner brett\ncannon and\nguido a lot of historical information\nfrom guido as well\nmuch like the sprints that have been\nheld for scikit-learn\nsee python typically runs sprints when\nwe have\nin-person conferences which sadly um\n2020 but you know\nthe hope is that there will be some\nbeing done\nvirtually and um you know if anybody\nwants to run the c python sprint let me\nknow i'd be happy to kind of help\nguide you with that um many of the\npython\npython talks both um from pycon us\nand beyond um explain how to contribute\nto core python\ni think my python talk from 2015 was how\nto contribute to core python when you're\nnot a core developer\nmariada's given great talks about\ncontributing\nboth to the language and to the workflow\nof victor stinner\nand for those of you that have any\ninterest in\nasynchronous programming lucas has\na great series on youtube about async io\ni think it's about seven parts and um\nit's a really great introduction so\nwe can always use help from folks that\nare interested in asynchronous\nand this is just a small subset maybe a\nthird of the core developers\nas volunteers our time is limited\nbut the community is key and it's what\nlets python both as a language\nand ecosystem thrive\nso i want to encourage you to go forward\nand contribute join the discussion on\ndiscourse which is discuss\npython.org and whether you're\ncontributing to python\nor any of the projects in the ecosystem\nyou are creating real change\nand helping others solve important\nprogress\nproblems in the world so i want to thank\nyou for listening to me\nand um thank you to roshama and the\norganizers and\ni'm going to shut off my screen\nthis is already available on speaker\ndeck\nand it will be available through data\numbrella\nas well\nand i am happy\nto take any questions that\nmight have come up okay so um there's a\nquestion about the slide so i will find\nall right\nspeaker deck for that um\nspeaker deck okay um\nso the next question is is the need to\nreproduce\nold bugs against the newest version of\nthree nine in need\nof the project\ndepends on how old the bug is um if the\nbug is like within two years old\ni'd say yeah it's probably useful to\nreproduce those if\nin general my view and it's strictly my\nview it's not a\nofficial view in any way or shape or\nform personally\ni would close the vast majority of\nissues\nthat are over let's say three years old\nand because they're still accessible\nto people to find if needed\nbut the likelihood of them being worked\non i think is fairly low\num uh we are going\nto move the issue tracker to github um\nthere is work in process to do so\num and that should make\nthe whole process more streamlined and\nit will let us do some things\nwith notebooks and some of the tools\nthat we have in our\necosystem to help surface issues that\nhaven't been looked at to help recognize\ncontributors there's many different\nthings we can do\nwith the data that is available within\nthe repo\nhopefully that answers the question\nokay uh the next question is g-i-l is a\nproblem but the advice i've seen is\navoid being limited to one core is to\nuse\nmulti-processing over threads\nokay so there's a lot of different\nperspectives\nand um the gil or gill\nwhich is the global interpreter lock\nthere are different ways of\ngetting performance that um\ngets around the limitations of the\nglobal interpreter lock\nmulti-processing is a great way\ni would say threads would not be my\nfirst choice\nin how to do that but things like cython\nnumber you know depending on the use\ncase\nasync io but yeah it's a great question\nand the resources that i mention\nparticularly high performance python\nwill give you excellent advice on how to\nget the most\nout of your deployments in a safe and\nefficient way\nokay and the next question is what is\nthe best way to attract a mentor from\nthe core\nteam does the project have a formal\nprocess for being mentored\nso there is a core mentorship\nmailing list which used to be more\nactive right now\nmentors you know because we're all\nvolunteers\npeople mentor as they are able to\ni typically my mentoring is basically\nbeing welcoming and answering questions\nthat people directly ask me\num i just don't have the time and\nbandwidth to mentor individuals\nbut um one of the things that\nwe do have is the triage team so if\nyou've been involved for a while\nsomebody may ask you hey do you want to\njoin the triage team\nand the triage team you know it has some\nadditional\ncapabilities they can do things like um\nmake comments uh or attach labels to\ndifferent issues\nand that's really a great way that\nrecently folks have found mentors\nas a result of the work that they were\ndoing within triage\nand then victor stenner has been really\ngreat at mentoring folks\nas well as you know barry raymond hedger\nyou know there's a lot of people that do\neric snow\num pablo salgado who's our\nrelease manager for 310 and 311 have\nalso mentored fix\nand victor's got a lot of writing on it\nso hopefully that helps\nand feel free to reach out to me\ndirectly and\ni can probably provide additional\nresource what's the best way to reach\nyou carol\nuh reshma knows this\ni stink at email um\ngithub is really the best way to at\nmention me on something\nbut um you know my dms are open\non twitter and you know i will get to it\nwhen i can get to it\num it's not that i don't want to respond\nbut the volume of stuff that comes in is\ni could spend my whole day doing email\nand nothing else\nso um you know i\ntell folks that i meet you know be\npersistent\nif you don't hear from me once or twice\ndo not hesitate to email me a third time\nand i will do my best to\nanswer okay the next question is from\nyour viewpoint\nwhat does the future hold for python for\ninstance for the next\n30 years wow\nthat's 30 years i hope\nthat python is as vibrant today as\n30 years 30 years from now as it is\ntoday\ni think in many ways\nyou know the whole data science\nscientific\npython ecosystem has been one way that\nhas really revitalized the language\nover the last five years another place\nthat we're seeing\na lot of growth is in embedded systems\nthings like\nmicro python and circuit python and\nuh you know that's really exciting to me\nfrom an open hardware and education\nstandpoint\nand and getting young folks or\nfolks that maybe aren't computer\nscientists to start with involved\ni would love to see us um\ncan improve the performance of the\nlanguage\num and what that will look like i'm not\nentirely certain\num there's definitely going to be\nefforts over the next five years to do\nthat\nsome of it is time some of it is funding\num\nbut i\nthe one thing i hope stays the same 30\nyears from now\nis the readability of the language\nand i think because python is so\nreadable\nthat actually makes it much more\naccessible for folks\nas well as um tools like the notebook\nkind of break down and provide a good\neducation tool for learning more about\npython so\nthe community is going to be the one\nthough that drives where python goes\nand truth be told there's another\nlanguage that i also find really\ninteresting\nthat probably is relevant to many\nmembers in this community\nand that is julia it's still a very\nyoung language\nbut i think it has a lot of potential\nand promise\nand um is very similar to python in a\nlot of ways\num but gets around\nissues like the gill and relies more on\nc\nc plus and should you ever want to\ncompare\njulia code with python code tom\nsargent's\nquant econ website is excellent for\ndoing that\nbecause even if you're not an economics\nperson it has economics code\nwritten in python and then similar\neconomics code written in julia and it's\na good compare and contrast when you're\nlearning\nso i don't know that's about all i can\nsay\nfor the future that's there's been a lot\nof discussion i see going on because\no'reilly published a report too about\npython and i guess speed is the thing\nthat's most under discussion right\num it these days you know it it's\ninteresting\nbecause\noftentimes and and this has been\nhistorically\nyou know i'm 54 i've been in this\nindustry a long time\nspeed has always been at the key like is\nthis faster than the other\nis vim faster than emacs is emacs faster\nthan vim\num you know speed is relative\nand it depends on what you're measuring\ni would say one of the things that is\nnot often discussed and really should be\nis\nthe speed to create\na project and python\nis a really efficient language for going\nfrom\nno code to prototype to production\nand there's value in that\nbeyond just pure processing power and\nnow that said there are you know\ncertain things that if you're cpu bound\num like high cpu operations versus io\noperations and you know web is going to\nbe different than pure number crunching\nyou know your performance is going to\nvary\nand one of the things i think that would\nbe\nreally useful is to try out like profile\nyour code\nlook at the other tools for increasing\nthe speed\nyou know there's trade-offs regardless\nof what language you use\nand i encourage you to try\nother languages as well there's another\nquestion about um you mentioned the\nglobal reach of the tech community aside\nfrom events like this what is the role\nof the python steering committee in\nmaking the community more\ninclusive so\num the steering council\nhas been\na part of some of the code of conduct\num decisions and discussions related to\ncore developers and we have this year\ntaking some\nactions to\nredirect or remove uh folks that\nwere probably not contributing\nconstructively to the community\num the so you know adopting the code of\nconduct throughout the project was one\nway\nuh the steering council also\nlooks at efforts um\nwhether it is the\ncore language summit or the core\ndeveloper sprints\nthose used to be exclusive to only core\ndevelopers\nand in more recent years we've um\ninvited more people to it that\nto both increase the diversity on a\nnumber of\ndimensions as well as just even use\ncases\nmy hope has long been that\ndiversity will benefit\nfrom the move to github i was an early\nproponent\nof moving the code base to github and\nhave been a strong advocate for moving\nthe bug tracker to github\nor or it could have been gitlab but\nsomething where\nthe tooling is modern and is more\naccessible\nto more people because one of the things\ni personally feel when you're an\nunderrepresented group\nyour time is more limited than if you\nare in the majority so you have to pick\nand choose what you work on\nmuch more carefully and\nby having a roadblock like having to\nlearn an\nissue tracker versus using uh tooling\nthat you're used to from your day-to-day\nwork\ni think that adds a barrier\nto inclusion so um\n[Music]\nyeah so it's really trying to\nshift the culture towards more inclusive\nculture\nmariata has done an amazing job with\nthat and\nyou know the steering council is really\nthere to support the efforts within the\ncommunity\nand the core developers that are\ninterested in\nmoving that effort forward\nalso just to add you know pi ladies\nwhich is\num you know under python software\nfoundation is also\nconnected to um\nimproving inclusivity in the python\nspace yes yes that's a great\nsuggestion or comment because we also\nhave\num within pi ladies there's the ability\nto ask questions\num just like with our ladies there's an\nability to ask questions on\ncore development within those channels\nanother question here is what will be\nthe impact of the new\npeg parser in future python tools and\nlibraries and maybe you could explain\nwhat peg means to\nsomeone like me who doesn't know um so\nit's we affectionately call it the peg\nparser\nand when you're creating a language um\nyou have a grammar you know your syntax\nand the language has to have a way\nto sort of know okay this is a keyword\nthis is a variable this is an operation\nthings like that\nand that is the job of the parser\num i believe\nthat the peg parser will give us more\nflexibility over time\nit is probably equally as performant as\nthe prior parser and there was a lot of\nextensive testing\ndone during an entire release cycle to\nmake sure\nthat you know\nit wasn't introducing weird regressions\nand things like that\nbut one of the things it is much easier\nto write grammar\nrules now with the peg parser than it\nwas\nwith um the old parser that we have\nso hopefully that ans answered a little\nbit what it is\nand uh why it is and\nand someone who can provide far more\nanswers than i would be pablo salgado\nand um do reach out to him he's probably\ngot some talks on the peg parser as well\nand one last question which is i heard a\ntalk that is a twist\non the speed demand instead of focusing\ndeveloper time\nexpertise on on optimizing to a\ncapital o one go with n squared\nperformance because developer time is\nmore expensive than ram is what are your\nthoughts on that\num i i think it really\ncomes back to use cases and\num i think the difficulty with python is\nbecause we serve so many different\ncommunities\nwhat is optimal for one community may\nnot\nbe optimal for other communities um\nso you know it's an approach\nis it the approach i don't know\nto be really honest it wouldn't be my\nfirst approach\ni guess is what i'm saying okay\nso with that we are reaching the top of\nthe hour\nand so um thank you so much carol for\ntaking the time to join us and sharing\nabout core python\num i have a link to the slides i put\nthem in the chat and i'll include them\nin the video when it's uploaded to\nyoutube\nand there's a bunch of links to\nthat you've mentioned which i've been\nputting in chat and i will link to it in\nthe\nyou know youtube description or\nsomewhere very convenient\num yeah thank you so much great thank\nyou and thank you everybody for\nattending i hope you learned\nsomething about contributing to open\nsource and i hope you\nyou do so as you're ready to do it\nthank you", "idn": "17", "video_url": "https://youtu.be/Pkg-DKkObKs", "title_kw": "", "meta_json": "17.json", "audio_track": "17_Pkg-DKkObKs.mp4", "audio_text": "17_Pkg-DKkObKs.txt", "has_transcript": true, "status": "", "notes": ""}