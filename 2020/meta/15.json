{"presenter": "Emily Gouillart", "title": "Data Visualization with Plotly", "year": "2020", "transcript_md": "15-emma-gouillart-plotly.md", "meetup_url": "https://www.meetup.com/data-umbrella/events/272683860/", "yt_video_id": "BxIoQ0gsxzA", "slides_url": "N.A.", "repo_url": "N.A.", "notebook_url": "[plotly-code](https://github.com/data-umbrella/event-transcripts/blob/main/resources/plotly-code.ipynb)", "transcriber": "?", "extra_references": "N.A.", "video_href_w": "25%", "video_href": "http://www.youtube.com/watch?feature=player_embedded&v=BxIoQ0gsxzA", "video_href_src": "http://img.youtube.com/vi/BxIoQ0gsxzA/0.jpg", "video_href_alt": " Data Visualization with Plotly in Python", "formatted_transcript": "welcome to data umbrella\num i'm going to just go over the agenda\nof how the webinar is going to go i'm\ngoing to do a brief introduction\nemmanuelle um will do her presentation\non plotly\nand you can ask questions on the q a tab\nand so we'll sort of check questions\nwhen it's a good time to stop\num but not to worry your questions will\nget answered some of them might be at\nthe end but we will answer all questions\nand this webinar is being recorded\na little bit about myself i'm a\nstatistician data scientist i'm the\nfounder of data umbrella and i'm also an\norganizer for the new york city chapter\nof pi ladies\nyou can find me on twitter github and\nlinkedin\nas reishmas\ndata umbrella is our mission\nis to provide inclusive and welcoming\nspace for underrepresented persons in\ndata science\nmachine learning and ai and we are an\nall volunteer run organization\npi ladies is an international group\nthere\nare over 125 active chapters around the\nworld\nand it's for women and gender minorities\nof all levels of programming\num and this is our website yeah you can\nalso\num you know go to our website and we\nhave links to\nall of our linkedin and slack and more\ninformation\ni want to cover the code of conduct\nbriefly we're very strict with our code\nof conduct we're dedicated to providing\nharassment free experience for everyone\nwe ask that you make this a professional\nand respectful environment\nand this applies to the chat as well and\num\nit's been a great experience so far and\nthank you everyone in the community for\nuh keeping it up\ni want to share a new feature of data\numbrella which is a job board\nthe url is jobs.dataumbrella.org\ni'll also in in just a couple of minutes\ni'll put it in the chat um but you can\ncheck it out\nto see what jobs are posted and you can\nalso there's a weekly digest that you\ncan subscribe to\nif you are um in the job market\nwe have the highlighted job of the week\nwhich is farfetch farfetch is a\num i know they do work with fashion uh\nyou can read more about the um\njob on our website and they're new york\ncity based and they're looking for a\nlead data scientist\non our website which is dataumbrella.org\nthere are a number of resources there\nthere are resources\nfor accessibility and inclusivity there\nare resources for open source\nabout social impact of policy about\nscikit-learn\nso um you know on your when you have\nsome time uh check out the website um\nthere's a lot of\nhelpful information there\nfor data umbrella the best place to find\nout about\nupcoming events is meetup.com nyc data\numbrella\nuh the website has resources we're on\ntwitter feel free to tweet about it\nand pretty much we're on all social\nmedia platforms\ndata umbrella\nand now i am going to hand it off to\nemmanuel\num and uh just that you know if we could\nif we could clap emanuel is joining all\nthe way from france\nparis and i started in particular\ncontributing to psychic image which is a\npython\nimage processing toolkit since i was\nusing it for my research\nand one year and a half ago i decided to\ncontribute\nmore to open source and this is why i\njoined blockley\nfull time and during this time at\nplotley i've been lucky to receive a\ngrant\nfrom the chance working bag initiative\nwhich is a foundation\nwhich has funded a project\nuh bloodly to work on interactive image\nprocessing i talk about it\nat the end of the presentation\nso the subject of my talk is a bloody\ngraphing library so\nuh what is plot g maybe um\nmost of you know about it and i'll try\nto share\na little just so that you can vote for\nyour preferred\nvisualization tool you don't have to say\nit's bloodline it's just interesting for\nme to\nsee which tool people are using so i\njust put\nsolutions well just put answers in\nwriting\nbecause this is the language i know the\nmost\nuh but so plotly is an interactive\nweb native visualization library and\nsince it is developed for visualization\nin the browser\nit is written in javascript but it also\nhas\napis for languages more familiar to data\nscientists\nso python are and more recently\njulia as well\nthe the python flavor of\nplotly also has a high level\nexpressive api which is called bloody\nexpress\nand which is particularly suitable for\nworking with spender's data\nframes like seabourn for mad bloodly\nand for python plottings in fact\nthe most downloaded visualization\nlibrary\nuh which is interactive that is uh\nweb-based and\nvery interactive matplotlib is more than\nloaded but then it's not\nas interactive and it's not based\nplotly is open source it's mighty\nlicensed and during this presentation\nwe'll see that it has a large variety of\ntraces and is very customizable\nand it has a strong focus on\ninteractivity\nin the sense that charts figures are\nvery\ninteractive but also they send events\nwhich can be listened to by\nother libraries for even more\ninteractivity\nso in order to illustrate the\ncapabilities of properly\ni'll focus here on three different use\ncases\nof bloody during this talk first of all\nwe'll see how to explore data\nby visualizing them which is something\nyou can do\nin a jupiter notebook for example then\ni'll switch to a slightly more advanced\nuse case where you want your\nvisualizations to interact with other\nelements\nor to publish them as a dashboard\nand finally i'll combine the two first\naspects\nto show tools we've been developing\nrecently for\ninteractive image annotation and\nprocessing\nso let me start with the first\nuse case which is interactive\nexploration of\ndata and for this we'll work\nin a notebook\nso i guess most of you are familiar with\na jupyter notebook\nso it's a development environment\nwhich mixes code cells and the outputs\num so i'll be using it\nuh during this presentation i hope the\nthe fonts are big enough i can increase\nthem a bit\nso um plotly is open source you can\npaper install it\nand so we'll start by importing it\nand in particular we'll import\na set package called graph objects for\nit's like a collection of graphical\nobjects and it's\ncommonly imported as go\nand the first object we'll be creating\nis called a figure so when\nwe execute this in a notebook\nwe get a figure but then it's an empty\nfigure so not very interesting\nbut so we'll populate this figure object\nin an object-oriented manner by\nadding first a trace\nwhich will be a scatter trace\nwith x and y coordinates\n[Music]\nokay and we'll\nshow it so here\nthe first race and we'll add\nmore elements by adding for example\na bar plot\nso a second trace\n[Music]\nand let's say we don't\nso traces are data points which you\nare visualizing in some specific ways\nand\num here we also want to add more\nelements in particular\nlet's say we want to add a title so a\ntitle\nis a part of what's called the layout in\na\nclosely figure and\nso we call the update layout method\nmy first figure this will be my text\nokay so here is our first\nfigure object but what it is uh what is\nit exactly\nto know what is this figure object\nwe'll just print it\nto show its structure\ncalling its representation\nso we see that this figure object\ncontains an object which looks like a\ndictionary\na dictionary with two keys one of them\nis the data\nwhich is a list of traces and the other\none is a layout\nand so each trace or the layout is\nitself a dictionary\nwhich is a dictionary of dictionaries so\nit has a nested\nhierarchy structure with the different\nproperties and attributes of the visual\nelements\nand this object is in fact passed\nto the javascript library as a json\nstring since it has this json-like\nhierarchy so it's in fact a very\nsimple object which is just past as it\nis to\nuh the javascript part of\nthe library and once you have understood\nthis nested hierarchical structure\nthen you can modify it\nlike for example if\ni want my\nfirst trace which is the scatter trace\ni want to modify its x coordinate\nnot 0 1 2 but 1 2 3.\ni can modify it this way you see it has\nshifted the x data points or i can also\nmodify\nmy title\n[Music]\nuh like\nthis equals 30.\nokay but um so instead of\nwriting all those dots it's actually\nnicer to call this high level\nmethods of the figure objects which\nare archways or update traces\nupdate layout and\nalso instead of writing all these dots\nyou see here this underscore\nwhich is exactly uh the same\nas uh putting a dot here so if i want to\nmodify the title font size\nhere i can write it like\nthis so using this underscores called\nmagic\nunderscores a way to navigate down\nthe hierarchy of attributes of the the\nplotly figure\nthere you go okay so this was for\na crash course introduction to the\nstructure of bloody figures\nyou can create figures in this\ninformative way where you define the\ntraces you modify the layout\nand you create a figure but sometimes\nit's\nmuch nicer to uh use a high level\napi and this is uh what the bloody\nexpress\num package does so now\ni'll introduce bloody express\nyou usually import it as px\nand uh so it's probably express\nwhy express it's uh in order to create\na function figures\nfast but also uh to\nalso to create figures in an\nexpressive way so it's both fast and\nexpressive\nand so px comes with a set\nof built-in data sets so we'll use one\nof them which is called the gapminder\n[Music]\nso what it is it's it's a painless data\nframe\nwhere each line is a pair of\ncountry in year\nand there are other columns\nfor values such as the life expectancy\nor the population\nof the country for this year so to to\nstart with\nwe'll limit our data sets to\nthe most recent year here using some\ntypical pandas syntax with a query\nand we'll start by asking ourselves\nwhat is the distribution of life\nexpectancies through\nthe countries of the world so we'll call\nthe plotly express or px that\na histogram function in order to\nplot a histogram so the syntax is\nyou have the data frame and then you\ngive the variable\non which you want you to plot the\ndistribution so\nhere i'm interested in the distribution\nof\nlife expectancy there you go\nso you've got\nthis figure which is\n[Music]\nquite interactive you can see in\nparticular that\ni can see for each binder the count\ncorresponding to the number of countries\nwith life expectancy\nin a given bin what's interesting is\nthat you can see that\nthis histogram is quite bi-modal it's\nnot just one peak\num you can see that uh a few countries\nhave a very\nlow life expectancy all those very high\nso\ncan we know more about which countries\nare in which to pin for this we\ncan add more visual elements but\nfirst i'd like to show you that\nthis figure created by\nthe plotliexpress core the plot express\nfunction\nis not very different from\nuh the figures we've been using uh in\nthe examples just before with graphical\nobject so we'll\nprint the figure and you can see\nthat so it's still a figure object with\na data key corresponding here to one\ntrace\nthis trace is a histogram so it's a\ngraphical object\ntrace it has some x data and also it has\na layout\nwhich is populated with\nsome values in particular the\nthe the title of uh the\nthe access is already\n[Music]\nspecified you don't have to to give it\nyourself so\nbloody express is here a fast way\nto to produce a figure which is not\ncompletely\ncamera ready but uh has already a lot of\nuseful elements\nbut it's exactly the same structure as a\nplotline figure created with graph\nobjects\nand so i was saying what if we want to\nknow more about which countries are in\neach bin\nthen we can add facets\nfor a marginal view of the countries\nso we add this rock plot\nwhere each of these small bars\ncorrespond to one country\num but we don't know\nthe name of the countries so we'll map\nthe name the country column of the data\nset to\nthe hover name so that it appears in the\nhover\n[Music]\nwhat uh i'm i'm doing here is\nmapping columns of my data set to visual\nelements and i can go further\nin this direction by adding\na different color for\ndifferent continents\ncolor equals continent\n[Music]\nso here you've got this different\nstacked\nhistograms each one of them corresponds\nto a different continent\none interesting things also is this\nlegend which is\ninteractive like if i want to select\nonly\num asian country\noops i should\ndouble click on it or\ni can select or\nremove one of these continents so the\nthe legend\nis uh quite quite useful\num so this was for a histogram but\nin this histogram each\ncountry has the same weight whereas we\nknow that some countries are\nmuch more populated than others so if\nyou want\na different view what we can do is\ninstead to plot\na bar plot with\nthis time\n[Music]\nthe x corresponding to the\nthe continent and the y to\nthe population and you get\nthis bar plot and um\nwhere the height of each\nbar corresponds to to the population and\nthis time\nsince i've got a different x location\nfor\neach continent i can save the color for\na different\ncolon of my data set which is life\nexpectancy\nso that it will be\ncolor coded color coding the life\nexpectancy and you get this nice\nhues for the life expectancy with a\ncolor bar here\nso this\nchart is interesting but what if\ni want to be able to select one\ncontinent\nand to do some drill down\nin my data set for this i can\nswitch from a bar plot to a more\nhierarchical plot\nand i will show you this by just\nlooking through the plotly documentation\njust to\nshow you an example of uh how to look\nfor stuff\nin the plotley documentation so this is\nthe main plotly documentation\nand let's say you're looking for a\nhierarchical\nplot so you see that on the left column\nyou have the documentation results\nfor different tutorials and here is a\nfigure reference result so it's more the\napi\nso you see that the first results are\ntreemap\nand some burst charts so which are the\ntwo kinds of hierarchical\ntraces which we have in bloodley so if\nyou go to one of these pages\nyou have actually quite a large number\nof\nexamples for each chart you you can see\nthat there is a property express\nsunburst\nfunction that its arguments are pass\nfor the hierarchy of levels values\nis what you want to represent the\nequivalent of the y in the bar chart\nuh you have more examples with scholars\nand\nand so on and so forth so we try to have\nquite a thorough documentation for\nplotly\nand it's also an area where we get a lot\nof help from the community of users with\na lot of\ncommunity pro requests about improving\nthe documentation which is absolutely\ngreat\nand i hope we continue to have a lot of\ngreat contributions\nfrom the community in the future but so\nif i go back to\nmy code cell here if i want to\nplot a sunburst here instead\ni have to use a bus with continent\nand then country\n[Music]\nand my values will be\nthe population and color\nlife expectancy so i get this\num circular diagram where i can drill\ndown\nin one country and you can see\nthat in more details\nthe different countries of africa and\nyou can go back one level up\nby double clicking exploring uh\nanother continent so this is a\nsmall example of the entire activity\nwhich you\nyou get with bloody and by the way the\nsunburst and tree map charts are\neven more useful when you have a large\nnumber of levels like uh\nthree or four rather than two\num so this was\nfor a short introduction\nuh to the plotly visualization library\num one little thing which i can\nalso show is um\nhow to yeah how to\nmap different columns uh to\num not\na two to facets that is\ntwo different subplots this is something\nwhich is very\nvery useful so i could do\nlike a live\n[Music]\nequals continent\n[Music]\nit's why\nokay so in this visualization\ni get one\none facet per continent\nand i could also make different colors\num for\njust two\n[Music]\nyeah this is better so it's uh also a\nway to map\nthe values of your columns this time to\na\ndifferent subplots and this is a very\npowerful way\nof creating subplots and populating them\nbecause if you had to\nwrite all this yourself it's actually a\nbit more verbose you would have to loop\nthrough the different uh facets you can\ndo it of course\nit's easy to write loose with python but\nuh\nthis high-level way of making\nmulti-faceted\nplots is quite nice\nso this\nwas for the short not so short maybe\nintroduction to\nuh plotline and if you want to learn\nmore\ni recommend going to the documentation\nwebsite which has several tutorials\ncovering what i've been describing\nand in particular how to create\nfigures their structure plotly express\nand you can also\nsee in the documentation that there is a\nvery large number of charts\nof course uh usual basic charts like pie\ncharts bar charts but also statistical\ncharts\nuh heat maps geographical charts 3d\nvisualization is also quite interesting\nso check it out if you're interested\nso very nice flats a lot of different\ntraces\nbut what if you want to have more\ninteraction than just\nuser interaction in one figure for\nexample if you want\nto have two figures which interact\ntogether\nso um this is something\nwhich you can do with uh plotline\nbecause\nplotting figures in fact emit some\nevents\nwhich can be captured by other\njavascript tools\nand in particular you can\ncapture these events using dash so i\nspent just a few minutes\nexplaining what is dash which is another\nopen source library developed by plotly\nalso mighty license\nso dash is a web framework to write\nwhat we call analytical apps in python\nwe'll see examples of analytical apps\nwhich are basically dashboards for\nscience and data science it's a\nuser interface toolkit so written in\njavascript but\nwith a python api so that you can write\nyour java\nyour dashboards uh in pure python with\nno javascript required this is really\nthe promise of dash\nit has a large variety of interactive\ncomponents\nand so we will see\nuh first a few examples just to\nintroduce dash and then we'll see how\nplot integrates with dash\nso we've got this first hello world\nuh script for dash\nuh where you import some dash modules\nand then you create\nyour first dash app and you declare\nthe layout of the app with several\nelements\nso one of them is an html title and the\nother one\nis taken from this dashboard com\ncomponents library dcc which is for\nelements to be modified by the user and\nhere it's a text input\nso what happens if\ni execute this writing script\nwe'll go back to the notebook just in a\nfew minutes but just\ni show you the vanilla classical way of\ndefining uh of dash apps\nso when you run the app uh under the\nhood there's a flask server running\nand you can go to a url\nwhere you have created your web page\nwith this\ntitle you defined in layout and also a\ntext input\nso far so good but we don't have\ninteraction\nin this app so for interaction\nwe need to add what's called a callback\nuh so a callback is a\nthis function decorated here\nwhich links together\ntwo components the here\nit takes as input the the text input\nwhen it's changed the callback will be\ntriggered and as output\nuh the content of my title\nso what if i run this time\nthis new app\nthis will this should reload my\napp and now when i write hello\nevery time i type a keystroke\nthen\nthe values are sent to the python server\nthe\ncallback is executed and the new value\nfor the title is sent back to the\njavascript layer\nin my browser and if you want to take a\nlook\nat the graph of callbacks in my\nuh in my dash app\nyou can see that here there is one\ncallback\nlinking together the input\nand the title components\nokay so how can we\nintegrate this with platygraphs\nso for this\ni first show you an example\nof what is it\nit's here which is an example from the\ndash gallery so in this dcc\ndash core components package you have\na component called dcc.graph\nwhich is a wrapper around the plotly\nfigure\nand for example this is here a bloody\nfigure you can see here it's modbar\nit's a different kind of trace which is\nhere a cover plate so it's one of this\ngeographical\nuh map and so when\nyou change the sliders this will\nmodify your map because\nthere's a callback taking as input as a\nslider\nand as outputs a bloody figure the\ncallback creates a new plot refigure\nand sends it to the browser\nhowever uh this is only one way of\ninteracting and the other way works as\nwell\nlike if i make a selection like this\nlasting selection here\nin my figure this will\nsend a specific event called a selected\nevent\nin to a callback listening to this kind\nof event\nand this will modify a histogram here\nso the plotline figure can be interacted\nwith\nreally both ways in a dash app you can\nmodify it with a callback but it can\nalso trigger events\nand callbacks and if you want to know\nmore about the kind of events\nwhich you can listen to i encourage you\nto take a look at\nthe the interactive visualizations\ntutorial of the\ndash documentation where you have\nthis app with one callback\nfor every kind of event so\nhover over data which is the events\ntriggered when you hover\nclick data when you click selected data\nand so on and so forth and the layout\ndata is when you change\none element of the layout so for example\nhere if i\nzoom i will trigger\na layout data event changing the\nrange of the two axis or if i\nclick i trigger\nalso a click data event so this is how\nyou can\nconnect bloody figures to other parts of\na dash app\nso this was for\na very short demonstration\ndemo of how you can\nuse your plotter figures in an\ninteractive way with other elements\nin an app like a dash app and in the\nlast part\nof my talk i'll show you how\nto combine platy express with\nthe with dash for\nimage processing so image processing is\nuh what's the topic which uh\nmaybe interests me the most in data\nscience\nin uh in scientific writing it's\nthe task of processing your image data\nin order to extract information from\nthem it's something which is done\nin a very large variety of domains\nin science like in biology where you\nwant to count cells and measure\nthe properties satellite imaging\nit will be very useful also in\na self-driving cars\nor in image classification like in\ngoogle images for example\nand um last year i i've been working\non this project funded by sensody\nin order to develop more tools for\ninteractive image processing\nusing several mainstream tools\nfrom scientific python the first one\nis psychic image which is\nthe image processing toolkit for python\nso i'm a maintainer also\npsyched image which is a collection of\nimage processing algorithms with a\nfunctional api you call functions on\nimages\nand the idea of this project is to\ncombine the algorithms\nof site image with the capabilities of\nplotting dash\nto use plotly in order to visualize\nimage data\nin a dash to trigger to trigger\ncallbacks when you annotate images\nwithin plotline dash to call\nsome algorithms from psychic image like\nif you\ndraw a rough contour like here of\nthis organ you want a psychic image to\nsegment\nin a very good way uh it's exact contour\nso the idea is to have\nuh powerful tools to build interactive\nimage passing apps\nso how how have we been doing this\nuh let me go back to my notebook\na first step has been to\nextend the bloody express api\nso that it had\nimage visualization capabilities because\nwe used to have limited capabilities\nfor image visualization so i'll\nstart by just importing an image data\nset\nfrom plotly from psychic image so\nsorry by calling\none of the built-in image data sets\nwhich is the cat and\n[Music]\nthere is one trace\nwhich is called image trace\nand which is meant to represent images\n[Music]\ni forgot to import plotly that's a demo\neffect\n[Music]\nso there you go you've got this\nimage visualization here in this figure\nwhere you've got\nsome information in the hover in\nparticular the the value of each pixel\nis represented as z\nhere this is quite useful\nand so that's a low level\nuh go api but we've\nalso introduced\nthe corresponding property express\nfunction\nand we've got a px dot in show\n[Music]\nfunction\n[Music]\nand um\n[Music]\nwhich is calling um an image trace\nunder the hood so this the first step of\nthe\nproject was to uh implement\nthis interactive image\nvisualization function where you can\nzoom\nyou can select some parts and\nnow we can build our first\nimage processing dash app for this i'll\nreuse some code\nso that you don't have to see me\ncopy pasting so\nlet's say i want to\n[Music]\nvisualize\nthe histogram of some parts in\nmy image and i want the user to select\ninteractively uh some interesting parts\num so for for this since we are in the\nnotebook\ni'd be using um a recent\nlet me let me use a new notebook\nwe'll be using a new package called\njupiter dash\n[Music]\nwhich we've been\num releasing\nand oh i forgot to kill\nmy\nmy old app so i need to um\nuse in a new port so\n[Music]\nso jupiter dash is a way to\ndisplay your uh well to\nto write and visualize your dash apps in\nthe notebook so it's very convenient\nif you're used to working in the\nnotebook because you can start just\ncreating your bloody figures in the\nnotebook\nand then adding some interactivity with\nthe jupiter dash app\nso here i've got two figures\none of them is my image here and the\nother one\nis a histogram and i want to be able to\nmake a selection\nand to see what happens\nwhat is the histogram of my\nmy\nmy selected vision and so\nwhen you do this usually what i start\ndoing is that\ni i listen to the selected data event\nand i look\nat uh the structure of\nthis this events and i see\nthat it looks like this so i know the\nsyntax\nof um what i should be calling i use\nprint\nquite a lot in the dash apps and so\nthis will be like my next\nuh\n[Music]\nmy next callback let me update it\ni see that i'm running out of time so i\nwill try to be fast\nand just updating this\n[Music]\nso this time when i select\na small region then the\nthe graph is updated\nand if i select like the nose for\nexample\nit's very red so i can explore some\nparts\nof my my image like this\nthe white part is very bright and so on\nand so forth\nbut um so with selection i can\nhave some interactivity but selections\nare quite short-lived\nand we wanted to have something which uh\nwas more persistent in user annotations\nwhich you could\nuse for a longer time in the plotlife\nand this is why we introduced\nshapes shapes uh so\nshapes which you can draw shapes have\nbeen parts of the plotline layout for\na long time so a shape for example is\nthis rectangle\nand um in the most recent versions of\nbroadly\nyou can draw shapes yourself like for\nexample you can draw\na rectangle you can draw a circle\nand each time you do this this triggers\na layout event\nyou can also modify them just by\nclicking\nmodifying some of them and you can\nlisten to the corresponding we layout\ndata events\nuh in your your dash apps so\ni just stopped the presentation by\nshowing you a small example of a more\nadvanced\ndash app we've been writing using this\nannotation\nso this shape annotations we've got\none figure here which would like to\nsegment\nthat is to separate the different parts\nof the image\nin different classes and here when\ni'm selecting the different colors a\ncallback is updating the\nnew shape properties of my platfigure so\nthat\nthe the color is changed i will do this\ni can also modify it switch which is\nanother property\nof this new shapes and and so on\nand\nso i have all my shapes which are\npersistent more than selections\nand then when i click on this show\nsegmentation\na callback uses cyclone\nto compute well cyclotron and features\ncorresponding on local neighborhoods\nto compute labels for the remaining\npixels\nso this is an example combining\nthese plotly annotations\nuh in an interactive figure where you\ncan also\nzoom for example you can fan and\nlook at the details and also the power\nof scientific writing libraries like\npsychic image for image processing or\npsychic learn for machine learning\num so i'm running a bit out of time so\nconclude here by\njust hoping that this presentation was\ninteresting for you\ni hope there will be questions in the\nchat i\nhope you will be in touch either on\ntwitter or\nalso we have this discourse community\nforum where\na lot of questions about flatly and dash\nare asked\nand answered too so\nthank you very much and i hope we'll now\nhave a nice\nq a session thank you\nso let me go back to the chat\nokay so i guess it's it's your time to\nwork and to ask questions in the chat\nso the next question is uh is\nimage processing the same as neural\nnetworks or a different process\nso neural networks\nare a possible tools for image\nprocessing because\nimage processing is this\ngeneric class of tasks where you want to\nextract\ninformation from images\nand there are several ways of doing that\nuh\nyou can either do somewhere\noperations on uh pixel values\nwhich is a more traditional way of doing\nimage processing\nor you can build a neural net\nto perform some image processing tasks\nby uh\nlearning some structure out of your\nimages or you can also use\nuh more traditional tools uh for machine\nlearning\nlike uh the the app i showed at the end\nwas you using a random forest classifier\nfor example so this is not a neural net\nbut this is still using machine learning\nso i'd say\nneural net is one of the possible tools\nfor image posting\nand nowadays it's also the state of the\nart\nfor a lot of image processing\ntasks like image\nclassification or segmentation or some\nobjects\nnext question um\nhow is the app recognizing the classes\nafter\nyou indicate the classes this is some\nkind of cnn or\nother machine learning algorithm so\ni went very quickly on this app because\ni was running out of time so\num let me go back to the app so here\num for each pixel um\nwe call a circuit image function co\ncomputing\na vector features for each pixel so\nfeatures are based on the local\nintensity the local standard deviation\nand texture\nin different neighborhoods with\ndifferent signals\nso we've got this uh vector features for\neach pixel\nand after we call uh random forest\nclassifier\nuh from cyclic learn so it starts using\ncnn but\nthe features are defined um\nin um in a more specific way but of\ncourse it would be also possible\nto use a pre-trained uh neural nets here\nuh which could give\nvery good results maybe even better\nthat's actually some extension i've\nbeen wanting to to do to this ab it's to\ntry it out with uh\nwith the neural net\num\ndoes the next question is does bloodley\ndash work well with 3d volumetric images\nboth for visualization and image\nanalysis\nso plotline has\na variety of traces\nfor 3d visualization i can\nshow here\nthe section of the documentation on the\nuh 3d uh plots\nlike is it has a surface plots\nuh which\nit has uh 3d scatter plots and and so on\nand so forth\nuh the performance of these traces\ndepends uh on the size of your data sets\nlike if for example you want to compute\na nicer surface of\nseveral millions of points\nit can take quite a lot of time and it\ncan even freeze your browser\nso um usually you want to limit\nuh the number of data points uh which\nyou\nyou feed the browser since the browsers\nare not very good\nwith very large\nobjects but for\nmedium sized data sets\nyou've got all this nice traces\nwhich you can use so for\nimage processing in 3d in particular you\ncan use\nslices or maybe i can\nshow this up dash\nplayground it's a\nrecent app which we've been writing so\nit's not using here\na 3d uh trace but\nit's using uh just slices through\na 3d volume so\nit's a it's an mri data set here\nso this is just a broadly image where\nhere i'm navigating through the the\ndifferent slices\nand so here in in this interactive\ndash app we want to segment here\na lesion which is\na part of the brain where there was a\nproblem\nand so the segmentation is done so\nyou can see that this slicing and dicing\nthrough the volume works quite well so\nthis is something\nyou can do with splatling and you also\nhave a\n3d view here of the brain\nwhere you you have here the the lesion\nwhich has been segmented\nin 3d and the contour of the brain\nso this is a typical example of what\nyou've been doing in 3d\nwith splatly so that was for the vince\nand as for the image analysis so\nplotli does not include image processing\nalgorithms but\nuh if you're calling uh its python api\nthen you can use uh other packages such\nas\npsycat image uh for example so\nthat uh you can write callbacks which\nare just a few lines uh calling uh\nsecond image\nfunctions and this is what we've been\ndoing in this since that\nproject if you're interested i forgot to\nmention that\nwe've got a blog\nwhich is uh you can see it from\nmy twitter i've tweeted a few blog posts\nwith some examples uh describing how to\nuse\nplotly dash and circuit image together\nfor uh image processing and one of the\nnext posts will be\non the 3d visualization in image\nprocessing um\nso i think i went through the whole list\nof questions\nuh i don't know if we still have time\nfor\none or two questions\nit's also possible of course to reach\nout after the webinar\nbut the nice thing here is that other\npeople can see the questions and hear\nthe answers\noh we can take a look also at the at the\nresults of the poll\nuh but there is uh one more question\nuh oh which is basically a story of my\nlife\ncould you share your career trajectory\nfrom your phd in physics to working on\nopen source development full time\nso during this year's\nin research i've been doing\nexperiments where my main source of\nscientific data was images\nand i needed to extract\nsome numbers some scientific data from\nthis large sets of images which i was\nacquiring at the\nsynchrotrons and\nso and for for this\nthis is how i started contributing to\npsychic image because\nwhen i started doing image phosing a\nsecond image was actually just\nstarting and\ni i got more and more involved because\nuh\nwell first of all the scientific writing\nis community is a\nvery nice one very welcoming and i felt\nvery welcomed so i wanted to to spend\nmore time\nin this community and also i\nrealized the importance of having open\nsource tools\nuh available to a large community\nbecause this was something\ni was directly using for my my research\nwork so\ni i tried to spend some time on open\nsource development but as a hobby\nand at some point i thought\nhey why don't you try to turn this hobby\ninto a job\nand this is how i joined plotley which\nis\nthis open core company uh\ndeveloping nice open source\ntools used by very large number of users\nwith also a commercial offering\nbut i've been working on the the open\nsource tools\nand so at the end of uh\nthis grant i'm going back to to research\nbut\nuh it's been really great navigating uh\nbetween research and software because uh\num so for the research the software\ntools\nare just essential you you need them to\ndo your science\nbut also when you're developing uh\nsoftware it's very useful to have ids\nabout\nwhat users can do and having my\nbackground in research having also\ncollaborations and contacts\nstudents doing research has been very\nuseful\nwhen developing software because it\nhelps developing the right tools\nsomething which you think will be really\nused\nso um i would encourage really\npeople in research trying to spend more\ntime\ndeveloping open source software but also\npeople developing software also\ntrying to be in the shoes of their users\nand also to\nto work on applications so basically\ndoing more\nmultidisciplinary work so thank you for\nfor this question\nand for all the questions thank you\nthank you so much emma um i think that\nis the most successful live\ncoding demo i have seen\nwhich is really great because you never\nknow how these things\nwell yeah only a few bucks\nit was really great um thank you so much\num\nand for our um you know for people who\nare joining i'm gonna you know\nsort of um put a video up within the\nnext few days\nand for sharing the notebook it won't be\ntoday because it's midnight in paris so\nbear with me\nin wait until tomorrow please\nyeah we'll definitely get that\ninformation out i'll probably add it as\na link\nto the youtube video just so it's\nreadily available for whoever watches\nversus an email or something so yeah i\nthink that'll be great\nthank you very much to everybody it's\nbeen really fun\nuh giving this presentation and\nespecially answering the question saying\nthanks for having a lot of questions and\nif you have more please reach out and on\ntwitter\nor on the plotline community forum so\nsee you there\nthanks a lot\n\n", "idn": "15", "video_url": "https://youtu.be/BxIoQ0gsxzA", "title_kw": "", "meta_json": "15.json", "audio_track": "15_BxIoQ0gsxzA.mp4", "audio_text": "15_BxIoQ0gsxzA.txt", "has_transcript": true, "status": "", "notes": ""}