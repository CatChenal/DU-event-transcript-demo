### Introduction
<!-- Editing Guide: The pipe (|) position in this comment is 120:                                                       | -->

Hello my name is Rashmi and I'm going to go through an example of submitting a pull request or a PR I participated in my  
first scikit-learn sprint about a year and a half ago and I'm happy to share an example once you learn this example is  
gonna be for the SK learn repo but once you've learned how to do it for this repository you can do it for any repository  
on github so the first thing that I'm going to do is I'm just gonna make sure that I have my I have some things set up  
and the first thing is I'm working out of my home directory guys I just want to make sure and see which which Python I  
am using with the system is of anaconda I am using the anaconda version which is good I also want to just confirm what  
version of Python I'm using and it's version 3 6 8 and I just want to check one more thing which is do I have get  
installed and I do that's great so the next thing that I'm going to do is I'm going to set up my work environment my  
virtual environment and to do that I'm going to use Condor create - n4 name and the name of my virtual Lima is going to  
be SK learn death and I'm going to install the following packages in this environment it's going to be numpy sty pi Matt  
bot lib hi test thanks site and I know so this is gonna take just a little bit of time as it creates the environment  
it's gonna ask me if I want to proceed I can hit enter type es enter so the environment has been created it tells us  
right here to activate this environment use this command Conda activate SK learn depth or a content deactivate also if  
you want to see a list of your it work virtual environments I just type Conda environment list and for me I have two  
virtual environments I have my - environment for another project I'm doing an SK learn dev and I want to go into that  
one so I'm gonna do Conda activate SK learn dev and I want to do additional installations within this virtual  
environment and to do that I'm going to do Conda install - see Conda Forge and it's going to be this Phin X - Galilee  
there we go yes I'm sure OK so the next thing that I'm gonna do is I'm gonna set up my repository and so I'm going to  
go over to scikit-learn and this is the main repository and so I'm gonna fork it so I get a copy within my own account  
and I'm gonna fork it under might get help there  
 

#### 00:04:00,030::		4 minutes mark -> new paragraph 
 
it just takes a little bit of time all right there we go so right here it has my forked repo and over here it has OK  
over here just the main repo the next thing I'm gonna do is I'm gonna clone it right here I have my SSH keys set up so  
I'm gonna use this if you don't you want to use this URL so I'm going to click use SSH I'm gonna copy and then I'm going  
to go back to my terminal I'm gonna just clear it and go to the top and I'm going to type git clone and I'm going to  
close this OK so then I'm going to type ls' and that just lists what I have in this folder and it shows scikit-learn  
right here and I'm going to CD into it CD sidekick OK and the next thing that I'm gonna do is I'm going to build from  
source so I'm going to do tip install - e space dot you all right so that took a little bit of time but it looks like  
it's done the next thing that I'm going to do is I'm just gonna check my remotes or get so I have origin I have mine and  
I want to add my upstream and so to do that I'm going to go over here I'm just gonna open this in another window I'm  
going to get the URL for it and the way to do it is that you get Remo add up street and I add this URL to it OK and  
then when I check my remotes looks like I have the origin and I have the upstream which is good that's where I want to  
be so I just found the repo and it's up-to-date but say you're going back to your work if I want to get the latest  
changes to psycho denied it scikit-learn I do get pull up stream master so I'm pulling from this remote upstream and  
it's the master branch OK and it tells me it's already up to date which I expect because I just clone the repo the  
next thing that I'm gonna do is I'm gonna go to an issue that I have already picked out that I'm gonna work on and what  
it's going to be is this issue which is one five seven six one and it says that the documentation of default values and  
many classes of either not included or it's inconsistent and so I'm gonna reference this issue in my work it's gonna be  
one five seven six one and I'm gonna go look at an example of one so for instance here's here's one where the default  
values are consistent so it says default  
 

#### 00:08:02,589::		4 minutes mark -> new paragraph 
 
equals to default equals Euclidian it's the string default equals none so this is the way the consistent way that it  
should be in an example that I found for instance in under the decomposition folder under school dict underscore  
learning I found one where it is not consistent in here on line 75 it shows you can make this a little bit bigger it  
shows that it's an engine that goes 1005 default right and I just want to I'm gonna make a fix to this file all right so  
what I'm gonna do is I'm gonna go back to my terminal here and what I can do is I can go to this issue that's opened  
right and I can make a comment on it and I can say I am working on - burn py OK so just people know that I'm working  
on this at the sprint to make sure that somebody else also isn't working on the same thing at the same time and the next  
thing that I'm going to do is I'm going to create a feature branch so I'm going to go over here and I'm going to call my  
branch git checkout - B and I'm gonna call it dock because I'm working on a documentation change and I'm going to call  
it tipped learning and it looks like I'm already I because I created French this way I'm in the branch right there and  
I'm going to open up visual studio code my editor you can use any editor you wish but I'm usually using Visual Studio  
code OK so I'm in the secular in the repository my copy of it on my computer and it is under D companies under SK  
learn it's under decomposition and it is dipped underscore learning OK so here I am and it was on line 75 OK and  
right there notice how it says 1000 by default and if I want to be consistent I want to say default equals 1000 and I'm  
gonna come here and I'm going to do that OK and so I am going to save this file and then I'm going to go back to my  
god like that I'm gonna bring this over and the next thing that I do is I'm going to commit my changes so I'm gonna do  
git status and it tells me right here that I have modified this file right here so I'm going to add it and do it get add  
OK decomposition OK so the next thing that I'm gonna do after get at is I'm going to commit the file and it's get  
commit space - then and the description is I'm gonna say I'm  
 

#### 00:12:01,379::		4 minutes mark -> new paragraph 
 
gonna say updated formatting or default value or consistently OK all right so the next step that I'm gonna do before I  
push my changes is I'm going to run some tests so I am going to learn run the flake eight tests for formatting so it's a  
flake 8 sk and here I'm going to put the path to my file so it's gonna be decomposition and there we go Wow and it tells  
me that on line 75 I have this thought I have a trailing white space so I'm going to go back to my OK when I do  
control efore the end yep I'm not I had one extra space which I shouldn't so I'm gonna go back one I'm going to save  
this file again make sure my changes are safe then I'm gonna come back here OK when I do get status it should show me  
that I've changed something and it does that tells me right here so I'm gonna go to the process again I'm going to do  
get add OK composition and I'm gonna do get commit so I'm going to type in the same thing I'm going to say update my  
commit so I'm gonna say fixed like eight error grr there we go OK so great and I'm gonna run the flaky test again just  
to make sure I just arrow it up to make sure now that I fixed that trailing space it didn't show me any more errors so  
that's a good thing the next thing that I'm gonna do is I'm gonna run the PI test SK learn test now I made a  
documentation change and I don't expect there to be any errors but this is an example where it shows you I'm running the  
suite of Pi tests that's they learn just to see what the output looks like so what this is doing is going through every  
test that's created and it's just making sure that none of the changes I made has a adverse impact on any of them all  
right so it looks like one of the tests did not pass I made a I made a documentation change and occasionally some test  
doesn't pass but it doesn't impact actually it says over here gets kicked so let's see what  
 

#### 00:16:01,800::		4 minutes mark -> new paragraph 
 
happens I had done I get add a git commit now I'm gonna do git push I'm gonna do get push origin is to my remote and to  
my branch name which is do see dick learning let's see what happens so it has pushed to my branch I'm going to go over  
to my my fault repo I just refresh this page and it tells me that I have a pull request that I can compare and submit so  
I'm gonna click on that OK and this is where I add a meaningful title OK and so I'm gonna call it do see because  
it's a documentation fix and I'm gonna say cleaning parameter doc string in decomposition slash and this is where I  
write some information and so I'm gonna say here that I am this PR references it references 1 5 7 notice it's  
automatically linking to there you go fix documentation so I can hold it fill that in I can delete this remember I don't  
want to do closes here or anything like that I'm gonna put a description here that says that I updated default value  
documentation for consistency OK and if I have any other comments what I'm gonna do is I'm gonna assume that I were  
worked with of my pair programming partner OK so she also gets the notifications and I'm gonna I'm gonna assume that  
it's Miriam I am actually all right and I just want to read this it tells me it's a loose evil volunteer so let's be  
patient about it I have read it they thanked me for contributing great and I have the information here I can also  
preview over here and tells me what it references which one it tells me that and here I can I click on allow edits my  
maintainer x' OK something needs to be changed I can go through here that tells me that this is exactly what I changed  
I changed one line and the line I change was instead of a thousand by default its default equals a thousand so it looks  
like everything is in order I am going to create the pull request OK and now notice I'm at the spike it learn me  
though and it is running some checks right here this is in gold so beans it's still processing right there I'm going to  
go to the repo I'm gonna click on pull requests and this is just a way to see what are the pull requests other people  
have submitted notice that  
 

#### 00:20:00,940::		4 minutes mark -> new paragraph 
 
it's in green it has the dark it has the circle I'm going to go back into it just to see what's happening there's a  
bunch of checks here form progress to pending to neutral one successful sometimes if you know if the check fails you can  
click on details here this one has passed so I'm just going to open this up in another tab just to see what's going on  
and it gives some information huh log and we'll get home because I could do that later and this can also take a bit of  
time and sometimes when we're in a sprint a lot of people are submitting for requests that takes a little bit longer  
also let's see what happens if I walk in here I'm going to [Music] interesting all right let me click on these details  
again and see what happens this is what I wanted zero errors at zero mornings OK I'm gonna come back here and I'm  
gonna just look at this one here and it tells me that there's one test one successful fail and so this is actually a  
good way as these tests are being run if they fail you can click on these details and get more information about why  
they failed so I am going to stop right here and then come back to it so I am back I am checking to see my pull request  
it looks like all checks have passed which is great just so that you know the first time I did these peers I did not get  
so lucky but you know one of your tests doesn't listen pass you can open up the details and look for more click through  
and look for more information about what's in there sometimes you'll have a comment back from a reviewer I would say  
this took a good twenty or so minutes to run so keep that in mind when you are when you are running when you're  
submitting PRS and so that is an example of how to submit a PR with a simple with a very simple fix and so I just want  
to go over the pull request so what you want to do to get starters you want to make sure that you have your right  
environment setup anaconda is always good to use Python and get installed you want to setup your  
 

#### 00:24:02,100::		4 minutes mark -> new paragraph 
 
virtual and fire you want a fork and clone and create a branch you want to make an update to a file starting off with a  
small fix and documentation and then gradually moving on to editing some code running the test and submitting full  
request you know when you set up your virtual environment or somewhere along the way you are most likely gonna run into  
glitches I certainly did and so and it depends on your setup and what operating system you're using and what versions of  
libraries you have and a lot of a lot of dependencies and so there's various ways to resolve these glitches if you if  
you run into an error you can Google it to see what informations out there are chances are other people have also run  
into that error if you're in a structured environment like this open source sprint now you can troubleshoot with your  
peer program partner everybody comes in with a different background and experience and you know if you need assistance  
we have I mean this is the reason we have this printers we have our help queue on the discord and you can ask one of the  
mentors at the sprint and somebody will help you so I just want to go over some common mistakes that I have made along  
the way you know what chances are you're gonna leave this you're gonna leave the sprint and then the follow-up work is  
gonna come later and so as I as I would go back to do work I just want to make sure you know like am I in my virtual  
environment sometimes I actually don't go into my virtual environment and I run tests and I run into all these errors  
and so that's always important I always make sure that I'm in the appropriate branch that can be a cause of problems to  
make sure that I sync my repo with SK learn if you go back and you know work on your PR three days one week two weeks  
later they're gonna be updates that have been made to SK learn and you just want to make sure that you have the latest  
updates on your local computer and you just want to make sure that you've run the test make sure that you've run the  
flake eight tests and the pie taste as well and thank you for joining I think forward to looking at the PR isn't  
answering any questions on discord or on get her or or wherever thanks for joining  
 
