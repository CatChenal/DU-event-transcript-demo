<?xml version="1.0" encoding="utf-8" ?><transcript><text start="3.36" dur="4.959">hello everybody</text><text start="4.24" dur="4.079">welcome to data umbrella&amp;#39;s webinar</text><text start="9.28" dur="4.72">so um our our processes usually i do a</text><text start="12.4" dur="4.799">quick introduction um</text><text start="14" dur="4.16">maddie will do his talk and you know her</text><text start="17.199" dur="4.321">q a</text><text start="18.16" dur="4.72">um if you have questions you can on chat</text><text start="21.52" dur="3.36">or you can post them in the q</text><text start="22.88" dur="3.76">a tab i can easily move questions from</text><text start="24.88" dur="4.96">the chat over to the q a</text><text start="26.64" dur="4.08">so that&amp;#39;s fine um and this webinar is</text><text start="29.84" dur="4">being recorded</text><text start="30.72" dur="4.64">and will be available on youtube um</text><text start="33.84" dur="3.68">usually within a couple of days but</text><text start="35.36" dur="5.519">sometimes a week depending on</text><text start="37.52" dur="3.359">how much editing has to be done</text><text start="41.2" dur="3.44">a quick introduction about myself i i&amp;#39;m</text><text start="43.12" dur="3.599">the founder of data umbrella</text><text start="44.64" dur="3.28">i&amp;#39;m a statistician data scientist by</text><text start="46.719" dur="3.281">training and</text><text start="47.92" dur="4.4">i am available on twitter linkedin and</text><text start="50" dur="5.84">github at rachmas so</text><text start="52.32" dur="3.52">feel free to follow me if you&amp;#39;d like</text><text start="56.719" dur="3.601">we have a code of conduct here uh we&amp;#39;re</text><text start="58.719" dur="3.601">dedicated to providing harassment free</text><text start="60.32" dur="3.52">experience for everyone this applies to</text><text start="62.32" dur="4.72">the chat of this webinar</text><text start="63.84" dur="5.2">as well um our code of conduct</text><text start="67.04" dur="3.759">you can link to it on this link to the</text><text start="69.04" dur="3.6">sticky pad if you want to go to it</text><text start="70.799" dur="3.68">um thanks for making this a welcoming</text><text start="72.64" dur="4.64">and friendly community for all</text><text start="74.479" dur="4.161">um if anybody does sort of put something</text><text start="77.28" dur="5.36">inappropriate in the chat</text><text start="78.64" dur="4">we will remove that person from our</text><text start="84.84" dur="3.319">community</text><text start="86.4" dur="5.359">uh and to let you know that we are a</text><text start="88.159" dur="3.6">volunteer run organization</text><text start="92.799" dur="4.32">uh there are various ways that you can</text><text start="94.96" dur="4.08">um support our community</text><text start="97.119" dur="3.36">the very first way is to follow our code</text><text start="99.04" dur="3.2">of conduct we want to make it a</text><text start="100.479" dur="4.481">welcoming and inclusive space for</text><text start="102.24" dur="4.48">underrepresented persons and so</text><text start="104.96" dur="3.76">um following our code of conduct and</text><text start="106.72" dur="4.56">contributing to making a professional is</text><text start="108.72" dur="3.52">like our top priority otherwise you know</text><text start="111.28" dur="3.68">it could be like</text><text start="112.24" dur="4.96">any other community we have a discord</text><text start="114.96" dur="3.6">community chat so feel free to join it</text><text start="117.2" dur="3.599">it&amp;#39;s on our website</text><text start="118.56" dur="3.519">um it&amp;#39;s a it&amp;#39;s a place to ask and answer</text><text start="120.799" dur="3.201">questions there</text><text start="122.079" dur="3.201">we have an open collective where people</text><text start="124" dur="4.08">can donate to</text><text start="125.28" dur="4">um cover our operational expenses</text><text start="128.08" dur="3.6">expenses</text><text start="129.28" dur="3.039">and we also have an initiative this</text><text start="131.68" dur="3.6">video</text><text start="132.319" dur="4">um to do a transcript that will be</text><text start="135.28" dur="4.08">available for people</text><text start="136.319" dur="3.041">to read later</text><text start="141.2" dur="4.24">the location of the transcript is on</text><text start="142.959" dur="4.401">github data umbrella event transcripts</text><text start="145.44" dur="4.56">you can also find transcripts for past</text><text start="147.36" dur="2.64">events there</text><text start="150.239" dur="4">we have a job board which is at</text><text start="153" dur="3.879">jobs.dataumbrella.org</text><text start="154.239" dur="5.601">check it out just if you&amp;#39;re curious or</text><text start="156.879" dur="2.961">if you&amp;#39;re on the market</text><text start="161.12" dur="5.04">on our website which is dataumbrella.org</text><text start="163.68" dur="4.24">we have a lot of resources for open</text><text start="166.16" dur="5.2">source for accessibility</text><text start="167.92" dur="5.84">for responsibility social impact of ai</text><text start="171.36" dur="4.959">so please check it out later at your</text><text start="173.76" dur="2.559">convenience</text><text start="176.48" dur="4.64">we also have a monthly newsletter which</text><text start="178.319" dur="4.401">is that dataumbrella.substance.com i&amp;#39;ll</text><text start="181.12" dur="3.44">copy the link and put it in the chat</text><text start="182.72" dur="3.68">later we send out a newsletter once a</text><text start="184.56" dur="3.2">month so feel free to subscribe we</text><text start="186.4" dur="3.839">promise not to send you</text><text start="187.76" dur="2.479">spam</text><text start="191.2" dur="4.399">we are on all social media platforms as</text><text start="193.36" dur="3.519">data umbrella the best place to join</text><text start="195.599" dur="3.521">really is our meetup</text><text start="196.879" dur="3.041">group because that&amp;#39;s that has our events</text><text start="199.12" dur="2.399">in it</text><text start="199.92" dur="3.36">um and then there&amp;#39;s you know we&amp;#39;re on</text><text start="201.519" dur="4.08">twitter and linkedin and</text><text start="203.28" dur="4.16">also youtube so this is being recorded</text><text start="205.599" dur="3.121">and it&amp;#39;ll be uploaded to youtube so you</text><text start="207.44" dur="3.76">can check out our past</text><text start="208.72" dur="4.239">events there as well and if you</text><text start="211.2" dur="4">subscribe to youtube you get this</text><text start="212.959" dur="3.28">notification on your phone uh which is</text><text start="215.2" dur="3.2">useful</text><text start="216.239" dur="2.161">um</text><text start="219.84" dur="4.399">we have uh two upcoming events we&amp;#39;re</text><text start="222.56" dur="3.44">gonna have a contributing to pandas</text><text start="224.239" dur="4.08">webinar on december 15</text><text start="226" dur="3.68">so you can find it on our meetup page we</text><text start="228.319" dur="4.801">also have a command line</text><text start="229.68" dur="5.119">setup environment which is on january so</text><text start="233.12" dur="3.28">you know there&amp;#39;s more information on the</text><text start="234.799" dur="4.401">meetup group about these events and</text><text start="236.4" dur="2.8">signing up for it</text><text start="239.76" dur="5.039">today&amp;#39;s speaker is maddie pikas i hope</text><text start="242.64" dur="4">i&amp;#39;m pronouncing it that right</text><text start="244.799" dur="3.681">um maddie is an active computer</text><text start="246.64" dur="3.2">contributor to numpy and a member of the</text><text start="248.48" dur="3.52">steering council</text><text start="249.84" dur="3.2">he&amp;#39;s also a core developer and release</text><text start="252" dur="3.599">manager for pi</text><text start="253.04" dur="4.479">pi he also contributes to maintaining</text><text start="255.599" dur="2.801">the scientific python stack across the</text><text start="257.519" dur="3.601">ecosystem</text><text start="258.4" dur="4.799">of packaging ci which is continuous</text><text start="261.12" dur="4.639">integration and documentation</text><text start="263.199" dur="4.801">since april of 2020 and this year he has</text><text start="265.759" dur="5.761">worked at quansite labs and you can find</text><text start="268" dur="3.52">him on github at maddie p</text><text start="271.759" dur="3.601">and with that i will turn off my video</text><text start="275.04" dur="8.08">and</text><text start="275.36" dur="12.399">i will hand it the floor over to maddie</text><text start="283.12" dur="6.96">great uh okay here we go</text><text start="287.759" dur="3.521">so my talk today is how to get involved</text><text start="290.08" dur="4.76">in numpy</text><text start="291.28" dur="4.88">um as rashida said my name is maddie</text><text start="294.84" dur="3">pikas</text><text start="296.16" dur="3.52">this presentation is in the jupiter</text><text start="297.84" dur="5.199">notebook</text><text start="299.68" dur="5.359">and when we put up the youtube video</text><text start="303.039" dur="3.201">we&amp;#39;ll we&amp;#39;ll actually link to that</text><text start="305.039" dur="2.961">notebook as well</text><text start="306.24" dur="3.92">i&amp;#39;ll be tabbing around my web browser a</text><text start="308" dur="4.4">bit hopefully the lag won&amp;#39;t be too bad</text><text start="310.16" dur="4.879">and won&amp;#39;t make you too dizzy</text><text start="312.4" dur="4">use the chat and the q a there&amp;#39;s some</text><text start="315.039" dur="3.121">ringers in the uh</text><text start="316.4" dur="3.12">in the audience some other numpy</text><text start="318.16" dur="2.479">contributors and they&amp;#39;ll be happy to</text><text start="319.52" dur="4.72">answer your questions</text><text start="320.639" dur="6.641">um as we&amp;#39;re going along um</text><text start="324.24" dur="4.32">and my goal and the goal the the reason</text><text start="327.28" dur="3.84">that</text><text start="328.56" dur="3.6">we&amp;#39;d like to talk to you today is to get</text><text start="331.12" dur="3.359">help with</text><text start="332.16" dur="3.52">to get you started with helping us with</text><text start="334.479" dur="5.201">documentation</text><text start="335.68" dur="6.16">tutorials code and devops so numpy is</text><text start="339.68" dur="5.84">much more than just the code itself</text><text start="341.84" dur="3.68">we have other ways you can contribute</text><text start="347.84" dur="6.48">so what are we going to do first of all</text><text start="351.36" dur="5.36">don&amp;#39;t panic the project itself is huge</text><text start="354.32" dur="4.64">it has lots of different corners</text><text start="356.72" dur="3.52">and i&amp;#39;m gonna talk about some stuff and</text><text start="358.96" dur="5.359">if it doesn&amp;#39;t make sense</text><text start="360.24" dur="5.519">that&amp;#39;s okay i&amp;#39;m gonna have a brief</text><text start="364.319" dur="4.88">history of numpy</text><text start="365.759" dur="5.361">when was it started by whom and what for</text><text start="369.199" dur="4.321">what drives numpy what are the goals and</text><text start="371.12" dur="4.639">how do we decide on those goals</text><text start="373.52" dur="3.76">who are the who decides what happens in</text><text start="375.759" dur="3.121">the community</text><text start="377.28" dur="3.52">we&amp;#39;re going to talk about communication</text><text start="378.88" dur="2.4">channels and ways you can get in touch</text><text start="380.8" dur="1.839">with us</text><text start="381.28" dur="3.44">and the different repos there are in</text><text start="382.639" dur="4.881">github and then we&amp;#39;ll</text><text start="384.72" dur="4.4">demonstrate how to build and test numpy</text><text start="387.52" dur="4.48">and then we&amp;#39;ll take a look at</text><text start="389.12" dur="4.639">some how to find issues and prs that</text><text start="392" dur="2.96">contributors can work on</text><text start="393.759" dur="5.361">and then at the end we&amp;#39;ll take some</text><text start="394.96" dur="4.16">questions if there&amp;#39;s still time</text><text start="399.52" dur="5.76">but first me my name is matty as i said</text><text start="403.039" dur="4.72">i&amp;#39;m a kwan site developer quansite is a</text><text start="405.28" dur="6.08">company that about</text><text start="407.759" dur="6.081">developers working both in open source</text><text start="411.36" dur="3.76">and for contracted work</text><text start="413.84" dur="2.639">i was previously employed by the</text><text start="415.12" dur="2.88">berkeley institute of data science to</text><text start="416.479" dur="3.44">work full-time on numpy</text><text start="418" dur="4.08">i did that for two years before i joined</text><text start="419.919" dur="2.641">quansite and i&amp;#39;ll talk a bit more about</text><text start="422.08" dur="3.2">that</text><text start="422.56" dur="4.479">later i&amp;#39;m an avid open source evangelist</text><text start="425.28" dur="2.96">i believe in open source i think that&amp;#39;s</text><text start="427.039" dur="4.401">the best way to produce</text><text start="428.24" dur="6.48">quality code and software</text><text start="431.44" dur="6.4">pi pi is a pro project to</text><text start="434.72" dur="4.56">implement python but not by a c actually</text><text start="437.84" dur="2.96">by python</text><text start="439.28" dur="3.6">by a python so it&amp;#39;s python that</text><text start="440.8" dur="5.28">implements python just like</text><text start="442.88" dur="4.56">the c compiler is written in c um</text><text start="446.08" dur="4.32">if you want to know more about that you</text><text start="447.44" dur="4.56">can find out about it on pipe.org</text><text start="450.4" dur="3.68">i believe deeply in the power of</text><text start="452" dur="5.039">community that&amp;#39;s why</text><text start="454.08" dur="4.399">i&amp;#39;m doing this talk that&amp;#39;s why i&amp;#39;ve been</text><text start="457.039" dur="2.961">working on open source for the past</text><text start="458.479" dur="3.761">couple of years</text><text start="460" dur="4.319">i spent a long time in an intentional</text><text start="462.24" dur="4.399">community in israel called kibbutz</text><text start="464.319" dur="3.28">spent over 10 years there and i think</text><text start="466.639" dur="2.721">that community is</text><text start="467.599" dur="4.16">is the way that society should be</text><text start="469.36" dur="4.399">organizing itself</text><text start="471.759" dur="3.601">and i also believe in diversion and</text><text start="473.759" dur="4.241">inclusion</text><text start="475.36" dur="3.119">i was lucky enough to have a very uh</text><text start="478" dur="2.24">smooth</text><text start="478.479" dur="3.921">course in my life not everybody else</text><text start="480.24" dur="5.2">does and i&amp;#39;d like to help others</text><text start="482.4" dur="5.519">move on and become inclu and become</text><text start="485.44" dur="5.36">able to contribute to society tech and</text><text start="487.919" dur="6.881">open source in particular</text><text start="490.8" dur="7.36">okay so back to the talk about nunpai</text><text start="494.8" dur="6">numpai as you can see here in 2006</text><text start="498.16" dur="4.96">uh it was started by travis oliphant it</text><text start="500.8" dur="4.239">grew out of two other libraries numerica</text><text start="503.12" dur="4.72">and nomure</text><text start="505.039" dur="4.401">as a way to synthesize those two</text><text start="507.84" dur="4.079">libraries together</text><text start="509.44" dur="3.839">and it was the cornerstone of what</text><text start="511.919" dur="2.321">travis actually wanted to build which</text><text start="513.279" dur="4.481">was sci-pi</text><text start="514.24" dur="3.76">so numpy sits under scipy and it turns</text><text start="517.76" dur="2.079">out</text><text start="518" dur="4.64">numpy sits under a lot of other things</text><text start="519.839" dur="4.56">as well as time went on the numpy api</text><text start="522.64" dur="4.16">and the numpy way of looking at</text><text start="524.399" dur="3.44">a chunk of memory and dividing it up</text><text start="526.8" dur="4.32">into</text><text start="527.839" dur="4.481">items became very popular was adopted by</text><text start="531.12" dur="3.68">the deep learning</text><text start="532.32" dur="3.84">frameworks by a library called coupe</text><text start="534.8" dur="4.64">which allows you to</text><text start="536.16" dur="6.32">do numpy um like operations</text><text start="539.44" dur="5.28">on data on your gpu das</text><text start="542.48" dur="4.16">and sparse also use it well you should</text><text start="544.72" dur="5.44">use the the api and the ideas behind</text><text start="546.64" dur="3.52">numpy as well as numpy itself</text><text start="550.8" dur="4.24">numpy&amp;#39;s quite popular pretty much it&amp;#39;s</text><text start="553.44" dur="2.959">the first thing that people will install</text><text start="555.04" dur="3.12">if they&amp;#39;re doing data science</text><text start="556.399" dur="4.321">and they want to they&amp;#39;re building a</text><text start="558.16" dur="4.32">python environment</text><text start="560.72" dur="3.52">we estimate that it&amp;#39;s got tens of</text><text start="562.48" dur="3.12">millions of downloads and users</text><text start="564.24" dur="4.64">worldwide</text><text start="565.6" dur="5.2">and uh it&amp;#39;s maintained now by about</text><text start="568.88" dur="3.12">10 people that&amp;#39;s a bit of a stretch</text><text start="570.8" dur="4.8">maybe six people</text><text start="572" dur="6.399">actively uh maybe full-time</text><text start="575.6" dur="4.4">equivalents of about two and a half or</text><text start="578.399" dur="4.081">two people</text><text start="580" dur="3.279">it&amp;#39;s over its lifetime it&amp;#39;s had 1.4</text><text start="582.48" dur="3.28">million</text><text start="583.279" dur="3.12">dollars u.s dollars in lifetime funding</text><text start="585.76" dur="3.44">about</text><text start="586.399" dur="4.88">over a million of that was uh donated by</text><text start="589.2" dur="3.759">the moore and sloan foundations in a</text><text start="591.279" dur="3.601">joint grant</text><text start="592.959" dur="3.041">that i was lucky enough to participate</text><text start="594.88" dur="4.079">in it started about</text><text start="596" dur="3.36">two and a half years ago they hired</text><text start="598.959" dur="2.241">about</text><text start="599.36" dur="4">three developers to work on numpy</text><text start="601.2" dur="4.319">full-time for two years</text><text start="603.36" dur="5.44">along with some other things and that</text><text start="605.519" dur="6.161">really gave the library a boost</text><text start="608.8" dur="4.4">the infographic below shows how nunpai</text><text start="611.68" dur="4.88">is used pretty much everywhere</text><text start="613.2" dur="5.44">but of course you all know that</text><text start="616.56" dur="3.279">okay that was a brief history of numpy</text><text start="618.64" dur="4.879">now we&amp;#39;ll talk about</text><text start="619.839" dur="7.201">what what actually is numpy how do the</text><text start="623.519" dur="7.32">core people who who push numpy forward</text><text start="627.04" dur="6.239">what do they think the goals of it are</text><text start="630.839" dur="3.401">so as i said this is all a jupiter</text><text start="633.279" dur="3.68">notebook</text><text start="634.24" dur="4.08">um i&amp;#39;m just using the the website here</text><text start="636.959" dur="3.44">because i</text><text start="638.32" dur="3.36">i&amp;#39;m too lazy to actually write stuff by</text><text start="640.399" dur="3.361">myself</text><text start="641.68" dur="3.04">so if you go to the website you can read</text><text start="643.76" dur="3.84">about what</text><text start="644.72" dur="3.6">numpy is numpy is run by a steering</text><text start="647.6" dur="2.799">council</text><text start="648.32" dur="3.36">there&amp;#39;s about a dozen people on the</text><text start="650.399" dur="3.761">steering council</text><text start="651.68" dur="4">the steering council is a loose uh</text><text start="654.16" dur="3.359">loosely appointed</text><text start="655.68" dur="3.2">self-appointed group of people who are</text><text start="657.519" dur="3.681">the currently the</text><text start="658.88" dur="4.079">active contributors to numpy and they&amp;#39;re</text><text start="661.2" dur="5.36">the ones who will decide</text><text start="662.959" dur="6.32">what uh direction the the the</text><text start="666.56" dur="3.279">project will take numpy is made up of a</text><text start="669.279" dur="2.961">bunch of</text><text start="669.839" dur="3.841">overlapping teams we have teams for</text><text start="672.24" dur="2.96">might be a bit small here to see this</text><text start="673.68" dur="4.08">but we have teams for code</text><text start="675.2" dur="4.56">documentation the website for triaging</text><text start="677.76" dur="3.759">bugs and issues</text><text start="679.76" dur="4">and a small team for getting funding and</text><text start="681.519" dur="4.241">grants and administrating the project</text><text start="683.76" dur="3.68">and we also have a small number of</text><text start="685.76" dur="3.12">sponsors i already mentioned the moore</text><text start="687.44" dur="3.839">and stone foundations</text><text start="688.88" dur="4.16">chan zuckerberg institute is initiative</text><text start="691.279" dur="3.201">has been active in the past couple years</text><text start="693.04" dur="5.44">giving us some grants</text><text start="694.48" dur="7.599">and tide lift gives us monthly support</text><text start="698.48" dur="6">and uh both of these industrial uh</text><text start="702.079" dur="3.841">partners institutional partners i&amp;#39;ve</text><text start="704.48" dur="2.08">been working i&amp;#39;ve been lucky enough to</text><text start="705.92" dur="3.76">work at</text><text start="706.56" dur="3.12">over the past couple years</text><text start="710.639" dur="4.961">so how how do we decide what not where</text><text start="713.92" dur="3.76">we&amp;#39;re going to go with numpy</text><text start="715.6" dur="3.44">so if you look at it from the top down</text><text start="717.68" dur="2.719">we can look at it from the bottom up</text><text start="719.04" dur="3.359">we&amp;#39;re going to do that as well</text><text start="720.399" dur="3.281">but if we look at it from the top down</text><text start="722.399" dur="3.361">numpy is</text><text start="723.68" dur="3.599">it&amp;#39;s higher level goals and when we look</text><text start="725.76" dur="3.36">for funding</text><text start="727.279" dur="3.041">what we&amp;#39;re trying to do is to get</text><text start="729.12" dur="3.519">actually</text><text start="730.32" dur="4.639">funding for our roadmap the roadmap</text><text start="732.639" dur="4.241">describes the scope of numpy</text><text start="734.959" dur="4.241">and our wish list of features we&amp;#39;d like</text><text start="736.88" dur="4.959">to work on and then</text><text start="739.2" dur="3.68">enhancements large chunks of future work</text><text start="741.839" dur="3.44">on numpy</text><text start="742.88" dur="3.759">will be done through numpy enhancement</text><text start="745.279" dur="4.24">proposals or neps</text><text start="746.639" dur="3.841">and eps these are proposals to change</text><text start="749.519" dur="4.481">things like</text><text start="750.48" dur="6.72">the d type um a system</text><text start="754" dur="4.079">underlying the the array object or the</text><text start="757.2" dur="3.92">random number</text><text start="758.079" dur="4.961">module that was in numpy or one of the</text><text start="761.12" dur="6.48">latest ones that&amp;#39;s uh to put</text><text start="763.04" dur="10.799">uh to make all the functions in numpy</text><text start="767.6" dur="6.239">use processor intrinsics</text><text start="774.24" dur="4.24">okay so that&amp;#39;s kind of a higher level</text><text start="777.2" dur="3.759">viewer but</text><text start="778.48" dur="4.159">what does numpy think about itself numpy</text><text start="780.959" dur="2.56">is a very nice way to work with a chunk</text><text start="782.639" dur="4.64">of memory</text><text start="783.519" dur="5.201">on cpu with stride shape and d type</text><text start="787.279" dur="3.921">and one of the most important things</text><text start="788.72" dur="4.72">that we as developers take to heart</text><text start="791.2" dur="3.04">while developing numpy is not to break</text><text start="793.44" dur="2.56">anything we</text><text start="794.24" dur="4.56">have a strong commitment to be backward</text><text start="796" dur="4.88">compatible and not to break</text><text start="798.8" dur="3.36">people&amp;#39;s workflows we realize that numpy</text><text start="800.88" dur="4.959">is is a basic</text><text start="802.16" dur="6.32">uh core piece of the data science stack</text><text start="805.839" dur="4.961">in in python and we&amp;#39;re trying to be</text><text start="808.48" dur="4.08">careful not to break things</text><text start="810.8" dur="3.92">while performance is important</text><text start="812.56" dur="4.8">interoperability beats performance</text><text start="814.72" dur="3.52">as i said before numpy was started as an</text><text start="817.36" dur="3.919">initiative</text><text start="818.24" dur="4.48">to be one piece in a larger puzzle we</text><text start="821.279" dur="3.92">realized that that</text><text start="822.72" dur="3.359">that is a is a deep commitment and</text><text start="825.199" dur="3.521">that&amp;#39;s part of</text><text start="826.079" dur="4.241">what numpy views itself is as doing as</text><text start="828.72" dur="4.239">being the</text><text start="830.32" dur="4.879">being at the forefront and at the base</text><text start="832.959" dur="5.44">of a large number of</text><text start="835.199" dur="6.32">python array type</text><text start="838.399" dur="5.201">objects and driving that forward so that</text><text start="841.519" dur="5.76">people can do things with numpy</text><text start="843.6" dur="5.84">that uh that may uh</text><text start="847.279" dur="3.841">that that aren&amp;#39;t built into numpy but</text><text start="849.44" dur="4.16">enable interoperability with other</text><text start="851.12" dur="4.88">libraries</text><text start="853.6" dur="4.239">so what do i mean about interoperability</text><text start="856" dur="3.92">don&amp;#39;t worry if this is a bit of a deep</text><text start="857.839" dur="5.44">dive and you miss a bit of this</text><text start="859.92" dur="6">uh it&amp;#39;s more of a higher view of of</text><text start="863.279" dur="3.521">how just trying to in um trying to</text><text start="865.92" dur="4">emphasize</text><text start="866.8" dur="3.76">how numpy wants to work nicely with</text><text start="869.92" dur="3.76">other</text><text start="870.56" dur="5.92">libraries and to interact with other</text><text start="873.68" dur="6.88">libraries in a nice way</text><text start="876.48" dur="7.039">we what goes into numpy is actually</text><text start="880.56" dur="3.68">very tightly controlled we try to keep</text><text start="883.519" dur="3.281">many things</text><text start="884.24" dur="4.32">out of numpy provide only the minimum</text><text start="886.8" dur="2.88">tools needed to work with the basic</text><text start="888.56" dur="4.32">library that numpy</text><text start="889.68" dur="5.839">is and would rather delegate</text><text start="892.88" dur="3.84">other tasks to other libraries that can</text><text start="895.519" dur="2.961">move a lot faster</text><text start="896.72" dur="3.84">and maybe break things where numpy has</text><text start="898.48" dur="4.719">to be careful not to break anything</text><text start="900.56" dur="4.56">so one of the things that&amp;#39;s in numpy is</text><text start="903.199" dur="4.08">an is an extension to disk</text><text start="905.12" dur="3.44">disk utils which is a tool to build</text><text start="907.279" dur="3.441">libraries</text><text start="908.56" dur="5.12">but things like optimizations which are</text><text start="910.72" dur="4.72">in scipy or loading images which are in</text><text start="913.68" dur="3.599">psychic image and pillow</text><text start="915.44" dur="3.28">or working on the gpu which are in</text><text start="917.279" dur="4.321">cooper and jacks</text><text start="918.72" dur="3.76">they won&amp;#39;t ever hopefully come into</text><text start="921.6" dur="3.52">numpy</text><text start="922.48" dur="4.64">it&amp;#39;s hard to say never but they they&amp;#39;re</text><text start="925.12" dur="4.079">probably will never come into numpy</text><text start="927.12" dur="3.76">there are pieces of of code that are in</text><text start="929.199" dur="3.121">numpy for historical reasons and</text><text start="930.88" dur="4.319">probably shouldn&amp;#39;t be</text><text start="932.32" dur="4.959">one is a is a minimal fft implementation</text><text start="935.199" dur="4.401">the one in scipy is much nicer</text><text start="937.279" dur="4.081">as is the linear algebra routines that</text><text start="939.6" dur="4.479">are in sci-fi they&amp;#39;re much well</text><text start="941.36" dur="3.68">better thought out polynomial and f2 pi</text><text start="944.079" dur="3.521">were two</text><text start="945.04" dur="4">pieces of code that uh kind of orphans</text><text start="947.6" dur="3.359">no one really wants to take care of them</text><text start="949.04" dur="4.56">so they&amp;#39;ve stayed in numpy</text><text start="950.959" dur="3.68">and the random module that&amp;#39;s in numpy is</text><text start="953.6" dur="4">a best of brand</text><text start="954.639" dur="3.921">random number generator um that we&amp;#39;re</text><text start="957.6" dur="4.56">very proud of</text><text start="958.56" dur="6.24">and it would it is in numpy but</text><text start="962.16" dur="3.039">you might think that it doesn&amp;#39;t actually</text><text start="964.8" dur="2.08">um</text><text start="965.199" dur="4.961">belong in numpy it doesn&amp;#39;t actually go</text><text start="966.88" dur="3.28">with the core mission of numpy</text><text start="970.32" dur="3.04">in addition numpy provides throughout</text><text start="972.48" dur="3.52">its code</text><text start="973.36" dur="3.68">a way to take this nd array object that</text><text start="976" dur="4.32">i talked about that</text><text start="977.04" dur="6.32">that has the chunk of memory on the uh</text><text start="980.32" dur="4.16">on the cpu with strides and shape and</text><text start="983.36" dur="4">allows you to</text><text start="984.48" dur="4.799">subclass it via different protocols the</text><text start="987.36" dur="2.32">array of the dunder array protocol done</text><text start="989.279" dur="2.161">to a</text><text start="989.68" dur="4.399">wrap protocol down to a raised truck</text><text start="991.44" dur="4.88">protocol down to array priority protocol</text><text start="994.079" dur="3.2">all these are useful for subclassing and</text><text start="996.32" dur="5.04">the array</text><text start="997.279" dur="6.081">in a way that doesn&amp;#39;t actually um</text><text start="1001.36" dur="3.52">it overrides the behavior of the nd</text><text start="1003.36" dur="4.32">array but it doesn&amp;#39;t</text><text start="1004.88" dur="4.399">uh affect the code in numpy itself so</text><text start="1007.68" dur="3.279">it&amp;#39;s another way we can interact with</text><text start="1009.279" dur="3.841">others</text><text start="1010.959" dur="3.361">then we determined that these were not</text><text start="1013.12" dur="3.44">enough we need</text><text start="1014.32" dur="4.24">more ways for people to be able to</text><text start="1016.56" dur="5.36">override things in nampa</text><text start="1018.56" dur="5.279">and so we provided three new protocols</text><text start="1021.92" dur="3.519">the array euf protocol the array</text><text start="1023.839" dur="2.401">function protocol and the array module</text><text start="1025.439" dur="2.801">protocol</text><text start="1026.24" dur="3.36">to also make overriding functions</text><text start="1028.24" dur="3.12">transparent</text><text start="1029.6" dur="3.52">so all those protocols are the reason</text><text start="1031.36" dur="3.36">that you can do something like the code</text><text start="1033.12" dur="4.719">that&amp;#39;s on this page</text><text start="1034.72" dur="5.199">you can do import numpy as np</text><text start="1037.839" dur="4.161">import coupon which as i said was the</text><text start="1039.919" dur="5.92">library that allows you to work on a</text><text start="1042" dur="7.76">gpu you can create a coupon zero</text><text start="1045.839" dur="6.96">array by 10 by 10 of the d type</text><text start="1049.76" dur="5.36">np int and then you can</text><text start="1052.799" dur="4.321">call sum on that now when you call sum</text><text start="1055.12" dur="3.28">on that that&amp;#39;s actually calling the sum</text><text start="1057.12" dur="4.559">method on this a</text><text start="1058.4" dur="5.279">object but if you call np dot sum</text><text start="1061.679" dur="3.12">that&amp;#39;s calling a procedure from the</text><text start="1063.679" dur="2.961">numpy array</text><text start="1064.799" dur="3.601">but because we have protocols you can</text><text start="1066.64" dur="2.72">override that and that actually calls</text><text start="1068.4" dur="4.24">back out</text><text start="1069.36" dur="6.559">to coupei to provide their</text><text start="1072.64" dur="6.399">their function as well you can</text><text start="1075.919" dur="5.041">override functions okay sum is a u-func</text><text start="1079.039" dur="3.121">if that means anything to anyone mean is</text><text start="1080.96" dur="3.2">a function</text><text start="1082.16" dur="3.04">you can also override that with array</text><text start="1084.16" dur="3.519">function</text><text start="1085.2" dur="3.92">and lately our last step in this</text><text start="1087.679" dur="2.081">procedure and one that will be out in</text><text start="1089.12" dur="2.88">the late</text><text start="1089.76" dur="3.919">in the in the next release of numpy</text><text start="1092" dur="5.12">hopefully next month</text><text start="1093.679" dur="6">will be uh the like keyword</text><text start="1097.12" dur="3.6">which allows you to actually create a</text><text start="1099.679" dur="5.041">new</text><text start="1100.72" dur="8.319">array just with the same</text><text start="1104.72" dur="7.76">device type and same kind of format as a</text><text start="1109.039" dur="6.161">so all this needs a lot of fun working</text><text start="1112.48" dur="5.52">underneath the hood in numpy to make all</text><text start="1115.2" dur="2.8">these things work</text><text start="1118.96" dur="3.76">even that is not enough so numpy</text><text start="1121.84" dur="2.719">together with</text><text start="1122.72" dur="3.52">the other data libraries and together</text><text start="1124.559" dur="3.441">with some industrial partners</text><text start="1126.24" dur="4.24">have started to set up what we&amp;#39;re</text><text start="1128" dur="3.12">calling a common api for raise and</text><text start="1130.48" dur="2.559">tensor</text><text start="1131.12" dur="3.12">python library so this will cover both</text><text start="1133.039" dur="3.52">numpy and</text><text start="1134.24" dur="4.24">pandas type objects the pandas data</text><text start="1136.559" dur="4.801">frame and the idea is to</text><text start="1138.48" dur="3.76">create a common api so that anyone who</text><text start="1141.36" dur="4.96">wants to create</text><text start="1142.24" dur="6.559">something that can be that can</text><text start="1146.32" dur="3.359">one for one replace numpy will be able</text><text start="1148.799" dur="3.201">to do it</text><text start="1149.679" dur="4.401">so rather than import numpy you may do</text><text start="1152" dur="4">import my fancy library</text><text start="1154.08" dur="3.44">and as long as it implements all of</text><text start="1156" dur="3.36">these api functions</text><text start="1157.52" dur="4.399">you will know that it is numpy</text><text start="1159.36" dur="2.559">compatible</text><text start="1163.039" dur="3.441">okay so i hope i&amp;#39;ve convinced you that</text><text start="1165.28" dur="4.16">numpy tries to</text><text start="1166.48" dur="3.68">uh be uh interoperable with a lot of</text><text start="1169.44" dur="3.92">other</text><text start="1170.16" dur="5.28">um libraries and tries to be a good</text><text start="1173.36" dur="4.24">member of the community</text><text start="1175.44" dur="3.68">and now let&amp;#39;s actually talk about</text><text start="1177.6" dur="5.36">contributing to numpy</text><text start="1179.12" dur="3.84">and working with numpy</text><text start="1183.84" dur="4.88">like most of the world numpy has moved</text><text start="1186" dur="5.6">to github</text><text start="1188.72" dur="3.839">most of our our our activity takes place</text><text start="1191.6" dur="3.36">on github</text><text start="1192.559" dur="4.081">we also have a mailing list numpy dot</text><text start="1194.96" dur="3.92">numpy dash discussion</text><text start="1196.64" dur="4.159">for bigger topics ones that can&amp;#39;t be</text><text start="1198.88" dur="4.4">neatly packaged into an issue or pull</text><text start="1200.799" dur="2.481">request</text><text start="1203.679" dur="3.201">so how does that look let&amp;#39;s take a look</text><text start="1205.76" dur="4.48">at the</text><text start="1206.88" dur="5.279">numpy organization on github we have</text><text start="1210.24" dur="3.52">three or four different repos we&amp;#39;ll go</text><text start="1212.159" dur="5.681">through them really quickly to see</text><text start="1213.76" dur="7.52">which ones do what so</text><text start="1217.84" dur="5.6">the top um repo on in the</text><text start="1221.28" dur="3.279">in the hierarchy is the actual numpy</text><text start="1223.44" dur="3.04">slash numpy</text><text start="1224.559" dur="4">repo that&amp;#39;s where the code and the</text><text start="1226.48" dur="5.84">documentation for the numpy library</text><text start="1228.559" dur="6.24">live the archive the reason it&amp;#39;s on top</text><text start="1232.32" dur="4.32">is because that&amp;#39;s where i put my uh</text><text start="1234.799" dur="3.441">my talk just now that&amp;#39;s where it&amp;#39;s been</text><text start="1236.64" dur="2.56">archived and that&amp;#39;s where it&amp;#39;s uh you</text><text start="1238.24" dur="2.72">can find it</text><text start="1239.2" dur="3.52">so that&amp;#39;s why it was updated half an</text><text start="1240.96" dur="3.199">hour ago um</text><text start="1242.72" dur="3.68">that&amp;#39;s an archive of all kinds of</text><text start="1244.159" dur="3.841">presentations and talks and logos and</text><text start="1246.4" dur="4.56">branding about numpy</text><text start="1248" dur="4.48">numpy tutorials is a new repo that we&amp;#39;ve</text><text start="1250.96" dur="2.16">started in the past six months to</text><text start="1252.48" dur="3.84">actually</text><text start="1253.12" dur="5.28">aggregate uh best of brand tutorials on</text><text start="1256.32" dur="4.239">how to work with numpy</text><text start="1258.4" dur="4.04">things we recommend and ways we</text><text start="1260.559" dur="5.36">recommend that it all work</text><text start="1262.44" dur="6.599">numpy.org is the numpy website</text><text start="1265.919" dur="4.801">repo and then the only other one that i</text><text start="1269.039" dur="6.321">want to call out</text><text start="1270.72" dur="7.76">and in this long list is the numpy doc</text><text start="1275.36" dur="4">repo which holds a an extension for</text><text start="1278.48" dur="3.52">sphinx</text><text start="1279.36" dur="4.24">sphynx is a way to document python</text><text start="1282" dur="3.36">libraries it builds a lot of the</text><text start="1283.6" dur="4.4">documentation that you&amp;#39;ll see</text><text start="1285.36" dur="4">if you go into python document site</text><text start="1288" dur="4">python package</text><text start="1289.36" dur="4.4">documentation websites you&amp;#39;ll see</text><text start="1292" dur="5.2">documentations that have been built</text><text start="1293.76" dur="6.56">using sphynx numpy doc is a way to</text><text start="1297.2" dur="6.32">turn doc strings from python functions</text><text start="1300.32" dur="6.56">into nicely formatted the next</text><text start="1303.52" dur="3.36">beforehand documentation</text><text start="1308.72" dur="4">right got it</text><text start="1314" dur="3.36">okay so that&amp;#39;s how you can that&amp;#39;s how</text><text start="1315.6" dur="2.88">you kind of wander around the github</text><text start="1317.36" dur="3.28">numpies</text><text start="1318.48" dur="3.199">how do you actually build and test and</text><text start="1320.64" dur="4.24">get involved</text><text start="1321.679" dur="3.841">in uh in working with numpy the library</text><text start="1324.88" dur="2.72">itself</text><text start="1325.52" dur="3.519">not import numpy and then working with</text><text start="1327.6" dur="4.559">it but actually building it</text><text start="1329.039" dur="5.201">and testing it</text><text start="1332.159" dur="4.4">so numpy has a nice long contributors</text><text start="1334.24" dur="2.319">guide</text><text start="1336.96" dur="2.88">okay uh</text><text start="1340.32" dur="4.239">it goes through the whole development</text><text start="1341.919" dur="4.481">process with a summary of how to</text><text start="1344.559" dur="4.721">actually create a pull request</text><text start="1346.4" dur="3.759">how to build how to test what kind of</text><text start="1349.28" dur="2.96">styles</text><text start="1350.159" dur="4">stylistic things you can use how to</text><text start="1352.24" dur="4.4">build the documentations</text><text start="1354.159" dur="3.76">and then even more detail in subsequent</text><text start="1356.64" dur="4.64">web pages</text><text start="1357.919" dur="5.12">but you guys are lucky i&amp;#39;m here so</text><text start="1361.28" dur="3.44">we&amp;#39;re going to do this together we&amp;#39;re</text><text start="1363.039" dur="5.281">going to go through and</text><text start="1364.72" dur="5.52">create a directory to work to to uh</text><text start="1368.32" dur="4.08">actually build numpy we&amp;#39;re going to</text><text start="1370.24" dur="5.76">create a conda environment</text><text start="1372.4" dur="5.92">to build numpy we&amp;#39;re going to clone the</text><text start="1376" dur="3.28">repo and we&amp;#39;re going to actually build</text><text start="1378.32" dur="5.839">numpy</text><text start="1379.28" dur="8.879">so let&amp;#39;s start let&amp;#39;s start</text><text start="1384.159" dur="6.721">now i&amp;#39;ve got a terminal it&amp;#39;s a bit small</text><text start="1388.159" dur="3.681">let me try and copy paste the commands</text><text start="1390.88" dur="4.159">from here</text><text start="1391.84" dur="5.6">because copy paste is a is a developer&amp;#39;s</text><text start="1395.039" dur="2.401">dream</text><text start="1400.24" dur="5.2">and we&amp;#39;ll copy</text><text start="1405.76" dur="2.72">make deer</text><text start="1409.039" dur="6.481">temp dm</text><text start="1412.32" dur="6.4">test okay and</text><text start="1415.52" dur="7.2">cd temp</text><text start="1418.72" dur="5.04">dm test they always say never live code</text><text start="1422.72" dur="2.72">right</text><text start="1423.76" dur="6.24">and then i want to actually create a</text><text start="1425.44" dur="6.8">conda environment</text><text start="1430" dur="4.799">so i&amp;#39;m going to create a new condo</text><text start="1432.24" dur="2.559">environment</text><text start="1436.64" dur="4.88">called data umbrella using python 3.8</text><text start="1443.679" dur="7.6">and the things didn&amp;#39;t quite work this is</text><text start="1447.919" dur="3.36">why they say don&amp;#39;t live code</text><text start="1452.88" dur="3.2">it&amp;#39;s going to take a second to actually</text><text start="1454.32" dur="3.2">resolve all that</text><text start="1456.08" dur="3.599">and we&amp;#39;ll tell it to go ahead and create</text><text start="1457.52" dur="3.92">that environment</text><text start="1459.679" dur="4.401">i like working in a virtual environment</text><text start="1461.44" dur="6">that sets my makes my code uh</text><text start="1464.08" dur="6.079">makes my my python environment clean</text><text start="1467.44" dur="6.4">i know exactly what&amp;#39;s in it and now</text><text start="1470.159" dur="3.681">activate that environment</text><text start="1474.05" dur="3.86">[Music]</text><text start="1478.88" dur="3.84">okay now we&amp;#39;ve got a condo environment</text><text start="1481.2" dur="3.76">activated you can see that it&amp;#39;s called</text><text start="1482.72" dur="6">data umbrella</text><text start="1484.96" dur="8.12">and we&amp;#39;re gonna clone the um</text><text start="1488.72" dur="8.88">the the numpy repo get clone</text><text start="1493.08" dur="4.52">github.com https</text><text start="1498.84" dur="6.459">github.com</text><text start="1501.79" dur="3.509">[Music]</text><text start="1505.76" dur="3.84">okay and while that clones let&amp;#39;s go back</text><text start="1508.32" dur="3.12">and look a bit at the repo</text><text start="1509.6" dur="4.64">what we&amp;#39;re actually pulling down into</text><text start="1511.44" dur="4.719">this uh directory</text><text start="1514.24" dur="4.08">so if we go into numpy this is the</text><text start="1516.159" dur="3.601">director we&amp;#39;re cloning right now</text><text start="1518.32" dur="3.44">you&amp;#39;ll see that there&amp;#39;s a lot of</text><text start="1519.76" dur="5.12">different files here</text><text start="1521.76" dur="7.2">um starting with the readme itself</text><text start="1524.88" dur="7.279">that asks that ask for contributions</text><text start="1528.96" dur="5.76">um so among these directories</text><text start="1532.159" dur="3.281">the two that are really where we like to</text><text start="1534.72" dur="3.199">work in</text><text start="1535.44" dur="4.479">are the doc directory and the numpy</text><text start="1537.919" dur="3.36">directory</text><text start="1539.919" dur="3.12">because we&amp;#39;re going to try and build</text><text start="1541.279" dur="4.561">numpy let&amp;#39;s take a look at the</text><text start="1543.039" dur="4.24">numpy directory itself we&amp;#39;ll dive in and</text><text start="1545.84" dur="4">and see what it looks like</text><text start="1547.279" dur="4">oh my goodness there&amp;#39;s way too much here</text><text start="1549.84" dur="3.04">so</text><text start="1551.279" dur="4.801">there&amp;#39;s a whole bunch of directories</text><text start="1552.88" dur="6.48">here this is a mixture of python</text><text start="1556.08" dur="6.719">and c code within it</text><text start="1559.36" dur="5.76">within the uh within one one</text><text start="1562.799" dur="4.321">directory structure you&amp;#39;ll see things</text><text start="1565.12" dur="4.159">like f2 pi which i talked about which is</text><text start="1567.12" dur="5.439">a library that allows you to use fortran</text><text start="1569.279" dur="6.561">in python or random</text><text start="1572.559" dur="4">or disk utils which is a collection of</text><text start="1575.84" dur="3.12">improvements</text><text start="1576.559" dur="4.081">distributes so that it compiles better</text><text start="1578.96" dur="3.52">the one we care about is where the c</text><text start="1580.64" dur="3.76">code actually lives because numpy is</text><text start="1582.48" dur="4.079">built in c</text><text start="1584.4" dur="3.6">on top underneath the python a lot of it</text><text start="1586.559" dur="4.161">is python but much of the</text><text start="1588" dur="3.6">code is c and that&amp;#39;s in the core</text><text start="1590.72" dur="4.48">directory</text><text start="1591.6" dur="3.92">in the source directory this is where</text><text start="1595.2" dur="3.52">the</text><text start="1595.52" dur="7.6">actual code itself lives that we&amp;#39;ll be</text><text start="1598.72" dur="7.92">working with as as numpy contributors</text><text start="1603.12" dur="6.4">originally numpy had two different</text><text start="1606.64" dur="4.56">structures two different uh two</text><text start="1609.52" dur="3.6">different extensions that were built</text><text start="1611.2" dur="4.719">they&amp;#39;ve been unified together</text><text start="1613.12" dur="4.72">one is multi-array and one is umath</text><text start="1615.919" dur="2.88">multi-ray is the thing that holds the nd</text><text start="1617.84" dur="3.199">array</text><text start="1618.799" dur="4.561">so this is this is the actual code that</text><text start="1621.039" dur="4.88">builds that ndra object</text><text start="1623.36" dur="4.08">it looks a bit scary but as we&amp;#39;ll see as</text><text start="1625.919" dur="4.88">we try and work through an issue</text><text start="1627.44" dur="7.04">it&amp;#39;s not that horrible okay</text><text start="1630.799" dur="7.281">so we&amp;#39;ve successfully cloned numpy</text><text start="1634.48" dur="6.319">now we&amp;#39;ll cd into the into the github</text><text start="1638.08" dur="3.04">checkout and the next thing we want to</text><text start="1640.799" dur="2.801">do</text><text start="1641.12" dur="3.84">is build and test our new checkout of</text><text start="1643.6" dur="4.48">numpy</text><text start="1644.96" dur="5.36">so we do python the</text><text start="1648.08" dur="5.36">the way you can build a that people</text><text start="1650.32" dur="6.56">traditionally build a c extension</text><text start="1653.44" dur="6">project within python within</text><text start="1656.88" dur="4.88">the python world is with python space</text><text start="1659.44" dur="4.479">setup py</text><text start="1661.76" dur="3.919">numpy has a convenience function called</text><text start="1663.919" dur="4.081">run tasks</text><text start="1665.679" dur="3.841">that surprise surprise runs all the</text><text start="1668" dur="5.44">tests</text><text start="1669.52" dur="6.96">so it builds and runs the</text><text start="1673.44" dur="4.479">the tests of numpy there&amp;#39;s different</text><text start="1676.48" dur="3.04">ways you can run it this is all</text><text start="1677.919" dur="3.601">documented on the website under that</text><text start="1679.52" dur="4.159">contributor guideline</text><text start="1681.52" dur="3.68">if you just run run tests which is what</text><text start="1683.679" dur="3.441">we&amp;#39;re going to do in just a minute</text><text start="1685.2" dur="3.68">it will build and run all of the tests</text><text start="1687.12" dur="5.12">that numpy has probably around</text><text start="1688.88" dur="5.76">12 000 14 000 different tests if you run</text><text start="1692.24" dur="3.84">it with a minus s it will only test the</text><text start="1694.64" dur="3.2">this module and if you run it with a</text><text start="1696.08" dur="4.24">minus t it will only test this</text><text start="1697.84" dur="4.959">particular test</text><text start="1700.32" dur="4.479">because as i said numpy is a c extension</text><text start="1702.799" dur="2.48">module there&amp;#39;s problems there&amp;#39;s problems</text><text start="1704.799" dur="3.36">there&amp;#39;s</text><text start="1705.279" dur="4.88">challenges when you want to build it and</text><text start="1708.159" dur="3.681">test it in place when you want to run</text><text start="1710.159" dur="3.601">the actual code that you&amp;#39;ve built so you</text><text start="1711.84" dur="4.319">have this directory</text><text start="1713.76" dur="3.84">and when you build the project not</text><text start="1716.159" dur="3.361">necessarily</text><text start="1717.6" dur="4.4">python knows how to import it from that</text><text start="1719.52" dur="3.68">directory so run test sets everything up</text><text start="1722" dur="3.76">in a way that you can do</text><text start="1723.2" dur="4.24">run test minus minus ipython or run test</text><text start="1725.76" dur="4.639">minus minus python</text><text start="1727.44" dur="3.839">and then it will import it will set up</text><text start="1730.399" dur="3.921">your environment</text><text start="1731.279" dur="5.841">so that you can import the newly built</text><text start="1734.32" dur="4.88">numpy every time you build it from or</text><text start="1737.12" dur="4.08">build it from build it in you</text><text start="1739.2" dur="3.68">we also have benchmarks within the uh</text><text start="1741.2" dur="4.4">test suite</text><text start="1742.88" dur="4.96">and uh you can run the benchmarks to see</text><text start="1745.6" dur="4.319">how your code has affect the performance</text><text start="1747.84" dur="3.52">of numpy</text><text start="1749.919" dur="3.841">okay i won&amp;#39;t go through everything that</text><text start="1751.36" dur="3.76">that&amp;#39;s in the run test it&amp;#39;s way too much</text><text start="1753.76" dur="4.399">to go through</text><text start="1755.12" dur="5.17">but let&amp;#39;s try running it</text><text start="1758.159" dur="4.24">the only argument i&amp;#39;ll give it is show</text><text start="1760.29" dur="5.869">[Music]</text><text start="1762.399" dur="7.28">build and build</text><text start="1766.159" dur="7.681">log which will show the compilation</text><text start="1769.679" dur="6.081">as it&amp;#39;s going ah i didn&amp;#39;t do something i</text><text start="1773.84" dur="3.36">didn&amp;#39;t read the instructions</text><text start="1775.76" dur="4.159">let&amp;#39;s go back to the instructions what</text><text start="1777.2" dur="4.16">didn&amp;#39;t i do i didn&amp;#39;t install everything</text><text start="1779.919" dur="6.561">we need to actually</text><text start="1781.36" dur="5.12">build numpy in our condo environment</text><text start="1786.799" dur="4.721">so let&amp;#39;s paste that command</text><text start="1789.919" dur="3.36">there&amp;#39;s a file that has all the</text><text start="1791.52" dur="4.639">requirements</text><text start="1793.279" dur="2.88">we&amp;#39;ll install that</text><text start="1800.08" dur="5.199">and now we should be ready to go</text><text start="1803.12" dur="4.159">okay so the first thing it does is</text><text start="1805.279" dur="4.321">process psiphon which is a library that</text><text start="1807.279" dur="3.28">takes python-like code and turns it into</text><text start="1809.6" dur="3.92">c</text><text start="1810.559" dur="3.6">and now it begins to compile the pipe</text><text start="1813.52" dur="4.24">the</text><text start="1814.159" dur="4.88">numpy extensions you can see it does a</text><text start="1817.76" dur="3.12">lot of compiling things</text><text start="1819.039" dur="4.64">while it does that we&amp;#39;ll take one more</text><text start="1820.88" dur="6">look at the at the uh</text><text start="1823.679" dur="4.161">at the directory structure okay i said</text><text start="1826.88" dur="4.399">there were two</text><text start="1827.84" dur="6.8">main uh pieces of the of the code</text><text start="1831.279" dur="5.041">itself of the numpy uh repo</text><text start="1834.64" dur="3.68">there&amp;#39;s the numpy code and then there&amp;#39;s</text><text start="1836.32" dur="4.719">the documentation</text><text start="1838.32" dur="3.359">we take our documentation seriously we</text><text start="1841.039" dur="3.12">like to have</text><text start="1841.679" dur="3.441">clear and concise documentation about</text><text start="1844.159" dur="3.12">everything that numpy</text><text start="1845.12" dur="3.12">does this is where the documentation</text><text start="1847.279" dur="2.64">lives</text><text start="1848.24" dur="3.52">just like in numpy where there was a</text><text start="1849.919" dur="3.521">source directory here there&amp;#39;s also a</text><text start="1851.76" dur="4.56">source directory</text><text start="1853.44" dur="3.2">and the the documentation is written in</text><text start="1856.32" dur="3.92">a</text><text start="1856.64" dur="7.84">in a format called rst restructured</text><text start="1860.24" dur="5.84">text um and the restructured test</text><text start="1864.48" dur="4.799">heavily uses</text><text start="1866.08" dur="5.76">the sphinx tool to automate</text><text start="1869.279" dur="4.481">a lot of the building things so if you</text><text start="1871.84" dur="5.36">look at for instance uh</text><text start="1873.76" dur="4.48">the the index page of the of the whole</text><text start="1877.2" dur="3.599">library</text><text start="1878.24" dur="4.72">all you&amp;#39;ll see is that it&amp;#39;s got a talk</text><text start="1880.799" dur="4.72">tree which is a table of contents</text><text start="1882.96" dur="4">and then it refers to other pages and</text><text start="1885.519" dur="4.4">these other pages</text><text start="1886.96" dur="3.839">will actually be pulled in and uh sphinx</text><text start="1889.919" dur="3.921">will help us</text><text start="1890.799" dur="8.48">create from this a nice html</text><text start="1893.84" dur="5.439">library so let&amp;#39;s see how we&amp;#39;re doing</text><text start="1900.32" dur="2.959">still compiling</text><text start="1905.2" dur="2.64">okay</text><text start="1910.08" dur="3.76">let&amp;#39;s move on a bit and we&amp;#39;ll come back</text><text start="1911.679" dur="8.961">to the tests we&amp;#39;ll come back to see how</text><text start="1913.84" dur="10">the run run went in a little bit</text><text start="1920.64" dur="4.72">so it all looked very clean and very</text><text start="1923.84" dur="3.839">easy for linux</text><text start="1925.36" dur="4">that&amp;#39;s usually the way world works but</text><text start="1927.679" dur="2.961">if you&amp;#39;re on a mac os and windows</text><text start="1929.36" dur="2.88">there&amp;#39;s a few things you might have to</text><text start="1930.64" dur="5.039">look out for when you&amp;#39;re</text><text start="1932.24" dur="5.039">starting to build numpy mac os</text><text start="1935.679" dur="3.12">is pretty close to linux so it&amp;#39;s pretty</text><text start="1937.279" dur="3.201">smooth</text><text start="1938.799" dur="3.521">you may have some problems with the</text><text start="1940.48" dur="3.039">accelerate library which is linear</text><text start="1942.32" dur="3.52">algebra library</text><text start="1943.519" dur="4.561">that numpy by mistake will pick up it</text><text start="1945.84" dur="3.52">has bugs and numpy won&amp;#39;t let you let you</text><text start="1948.08" dur="3.36">use it</text><text start="1949.36" dur="3.52">in its uh compilation so you&amp;#39;ll have to</text><text start="1951.44" dur="3.28">find a way to</text><text start="1952.88" dur="3.2">neutralize that that library there&amp;#39;s</text><text start="1954.72" dur="3.439">some tips in our</text><text start="1956.08" dur="4.24">developer guide on windows you&amp;#39;re going</text><text start="1958.159" dur="4.64">to have to install a compiler</text><text start="1960.32" dur="3.04">once you&amp;#39;ve done that it should just</text><text start="1962.799" dur="4">work</text><text start="1963.36" dur="5.439">hopefully um</text><text start="1966.799" dur="3.921">okay much of the code base is written in</text><text start="1968.799" dur="4.161">c and it&amp;#39;s not we don&amp;#39;t use c</text><text start="1970.72" dur="4.799">plus plus basically because we support</text><text start="1972.96" dur="5.52">some very old compilers</text><text start="1975.519" dur="4.321">as i said we try not to break things uh</text><text start="1978.48" dur="3.76">that means that</text><text start="1979.84" dur="3.679">because it&amp;#39;s written in c you need to</text><text start="1982.24" dur="3.76">know something about</text><text start="1983.519" dur="3.201">the python c api and how ref counting</text><text start="1986" dur="4.48">works</text><text start="1986.72" dur="7.199">ref counting is a way around</text><text start="1990.48" dur="6.24">is a way around the the uh the</text><text start="1993.919" dur="5.201">problem that python has in object</text><text start="1996.72" dur="4.64">initialization and throwing things away</text><text start="1999.12" dur="4.08">so objects in python live in a scope if</text><text start="2001.36" dur="3.84">you&amp;#39;re writing a python code</text><text start="2003.2" dur="3.92">you&amp;#39;ll see that the the object lives</text><text start="2005.2" dur="4.959">within your little</text><text start="2007.12" dur="4.08">local scope of your code and when the</text><text start="2010.159" dur="3.76">object goes out</text><text start="2011.2" dur="4">out of scope python is very clever about</text><text start="2013.919" dur="3.76">destroying it</text><text start="2015.2" dur="4.479">in c we don&amp;#39;t have that option once you</text><text start="2017.679" dur="5.281">create something in c you have to you&amp;#39;re</text><text start="2019.679" dur="6.401">the one who are responsible for</text><text start="2022.96" dur="5.76">for for destroying a door for</text><text start="2026.08" dur="4.16">deleting it another trick that we use in</text><text start="2028.72" dur="3.679">numpy is that a lot of the c</text><text start="2030.24" dur="4.24">code is actually generated either from</text><text start="2032.399" dur="4.481">python or from other code in a</text><text start="2034.48" dur="4">templating kind of way</text><text start="2036.88" dur="3.84">if you hit that then you&amp;#39;ll have to</text><text start="2038.48" dur="4.319">learn about it</text><text start="2040.72" dur="3.76">building documentation we talked about</text><text start="2042.799" dur="3.681">documentation how important it is to the</text><text start="2044.48" dur="4.399">numpy ecosystem</text><text start="2046.48" dur="3.28">because our code is self-documenting you</text><text start="2048.879" dur="2.8">have to have</text><text start="2049.76" dur="3.119">the version of numpy that you want to</text><text start="2051.679" dur="3.281">use</text><text start="2052.879" dur="3.28">we want to actually document installed</text><text start="2054.96" dur="3.119">in order to use it</text><text start="2056.159" dur="3.361">so this might be a little bit of there&amp;#39;s</text><text start="2058.079" dur="3.361">some tricks you have to learn to work</text><text start="2059.52" dur="4.159">around this when you&amp;#39;re</text><text start="2061.44" dur="3.52">when you&amp;#39;re compiling numpy and then</text><text start="2063.679" dur="3.92">trying to work on the</text><text start="2064.96" dur="5.04">documentation itself the two versions</text><text start="2067.599" dur="4.641">have to agree with each other</text><text start="2070" dur="4">as i said the doc strings the the code</text><text start="2072.24" dur="3.76">is self documenting so the dot</text><text start="2074" dur="3.359">strings for c extension they&amp;#39;re injected</text><text start="2076" dur="4.879">from python</text><text start="2077.359" dur="6.72">let&amp;#39;s see how that works we have a</text><text start="2080.879" dur="6.321">python file oops not that one</text><text start="2084.079" dur="6.241">this one we have a python file called</text><text start="2087.2" dur="5.6">add docs add new docs</text><text start="2090.32" dur="4.559">that adds the documentation to the c</text><text start="2092.8" dur="5.36">extension modules when you import</text><text start="2094.879" dur="4.561">numpy so let&amp;#39;s go down see how some of</text><text start="2098.16" dur="5.12">these look</text><text start="2099.44" dur="5.52">if nd enter probably it&amp;#39;s not a function</text><text start="2103.28" dur="4.319">most a lot of people use</text><text start="2104.96" dur="3.76">but here&amp;#39;s the documentation for nditter</text><text start="2107.599" dur="4.801">it&amp;#39;s written in</text><text start="2108.72" dur="7.359">are in rst in this restructured text</text><text start="2112.4" dur="6.16">within python so it&amp;#39;s got the triple</text><text start="2116.079" dur="3.76">quotes to turn it into a doc string the</text><text start="2118.56" dur="3.76">first line is the</text><text start="2119.839" dur="4.881">high or is the one line summary of what</text><text start="2122.32" dur="5.2">the function actually does</text><text start="2124.72" dur="4.32">and then there&amp;#39;s a longer summary and</text><text start="2127.52" dur="2.48">then the documentation is written in</text><text start="2129.04" dur="5.28">this very special</text><text start="2130" dur="6.16">format that that numpy doc strings use</text><text start="2134.32" dur="5.039">and then is parsed and turned into</text><text start="2136.16" dur="3.199">pretty documentation</text><text start="2140" dur="5.04">okay let&amp;#39;s go back and see how our test</text><text start="2142.72" dur="4.24">run went</text><text start="2145.04" dur="3.44">went pretty well okay it finished</text><text start="2146.96" dur="4.399">compiling i&amp;#39;ll go back i&amp;#39;ll</text><text start="2148.48" dur="4.4">scroll back up this is the end of the</text><text start="2151.359" dur="3.521">compilation</text><text start="2152.88" dur="3.6">and then immediately it started to run</text><text start="2154.88" dur="4.16">the tests</text><text start="2156.48" dur="3.359">people have used pi test before this is</text><text start="2159.04" dur="3.36">a pi test</text><text start="2159.839" dur="3.601">output of all the tests that numpy is</text><text start="2162.4" dur="3.199">running</text><text start="2163.44" dur="3.52">and everything was green there&amp;#39;s some</text><text start="2165.599" dur="3.281">tests that are skipped</text><text start="2166.96" dur="3.84">on different platforms and different</text><text start="2168.88" dur="2.959">operating systems we&amp;#39;ll use the</text><text start="2170.8" dur="4.48">different test</text><text start="2171.839" dur="6.401">testing strategies but everything ran</text><text start="2175.28" dur="3.36">that that could run here and all the</text><text start="2178.24" dur="2.56">test</text><text start="2178.64" dur="4.16">pass it just skipped out a bit on the</text><text start="2180.8" dur="4.72">screen here let me see if i can</text><text start="2182.8" dur="3.279">get that there we go pops up a bit we</text><text start="2185.52" dur="3.599">had about</text><text start="2186.079" dur="8.561">13 000 tests pass in</text><text start="2189.119" dur="5.521">a little over a minute 85 seconds</text><text start="2195.119" dur="5.521">okay great so</text><text start="2198.16" dur="5.12">we&amp;#39;ve moved on we&amp;#39;ve looked at a bit of</text><text start="2200.64" dur="4.32">code we&amp;#39;ve seen how we build numpy</text><text start="2203.28" dur="3.6">now let&amp;#39;s take a look at how you can</text><text start="2204.96" dur="4.24">actually</text><text start="2206.88" dur="3.12">dig out a issue or a pull request we</text><text start="2209.2" dur="3.84">have about</text><text start="2210" dur="3.76">10 minutes left to before we&amp;#39;ll take</text><text start="2213.04" dur="3.36">some questions</text><text start="2213.76" dur="5.12">answers to try and look through and and</text><text start="2216.4" dur="5.76">and find some issues you can work on</text><text start="2218.88" dur="4.88">typical workflow in in numpy is much</text><text start="2222.16" dur="2">like the other lectures you&amp;#39;ve heard in</text><text start="2223.76" dur="2.079">the</text><text start="2224.16" dur="3.84">in this or the other talks you&amp;#39;ve heard</text><text start="2225.839" dur="4.321">in this uh series</text><text start="2228" dur="3.68">you want to add a failing test we do</text><text start="2230.16" dur="3.36">test driven development</text><text start="2231.68" dur="3.439">the idea behind the failing test is you</text><text start="2233.52" dur="2.4">probably just take it right from the</text><text start="2235.119" dur="3.041">issue</text><text start="2235.92" dur="4.56">put that failing code into a test in the</text><text start="2238.16" dur="4.88">proper place in the test structure</text><text start="2240.48" dur="3.84">run the test as i did and your test</text><text start="2243.04" dur="3.039">should fail</text><text start="2244.32" dur="4">the next thing you need to do is find</text><text start="2246.079" dur="4">out where that function is implemented</text><text start="2248.32" dur="3.2">and then you have to start from there to</text><text start="2250.079" dur="3.601">figure out what&amp;#39;s wrong</text><text start="2251.52" dur="3.92">what&amp;#39;s going on in that function that</text><text start="2253.68" dur="3.28">trips the test</text><text start="2255.44" dur="3.28">then of course you want to try and fix</text><text start="2256.96" dur="3.76">it then run</text><text start="2258.72" dur="3.76">all the tests not just that one to make</text><text start="2260.72" dur="4.879">sure you didn&amp;#39;t break anything else</text><text start="2262.48" dur="5.44">very important not to break things then</text><text start="2265.599" dur="3.281">you can push a pr and interact with</text><text start="2267.92" dur="2.72">people</text><text start="2268.88" dur="4.56">so the work doesn&amp;#39;t end when you push</text><text start="2270.64" dur="4.4">the pr that&amp;#39;s only really the beginning</text><text start="2273.44" dur="3.04">that&amp;#39;s when the actual work itself</text><text start="2275.04" dur="4.16">starts your</text><text start="2276.48" dur="5.119">work will get a review a very careful</text><text start="2279.2" dur="5.52">review</text><text start="2281.599" dur="4.48">some people would call it nitpicky and</text><text start="2284.72" dur="4">then you need to</text><text start="2286.079" dur="5.361">react to the comments on that review and</text><text start="2288.72" dur="4.8">push it forward until it gets through</text><text start="2291.44" dur="4.48">if it&amp;#39;s a simple pull request maybe the</text><text start="2293.52" dur="4.48">whole process could take a week or two</text><text start="2295.92" dur="2.48">if they&amp;#39;re complicated pull requests</text><text start="2298" dur="2.48">well</text><text start="2298.4" dur="3.84">[Music]</text><text start="2300.48" dur="4.48">let&amp;#39;s take a look at what happens to</text><text start="2302.24" dur="5.76">complicated pull requests</text><text start="2304.96" dur="6.32">it&amp;#39;s not easy to find good first issues</text><text start="2308" dur="4">in numpy and i&amp;#39;ll just let&amp;#39;s open that</text><text start="2311.28" dur="2.88">up and take a look</text><text start="2312" dur="3.2">at that while i talk about why it&amp;#39;s not</text><text start="2314.16" dur="4.64">so easy</text><text start="2315.2" dur="6.72">we have over 2 000 issues in numpy</text><text start="2318.8" dur="5.52">and about 290 open pull requests</text><text start="2321.92" dur="4.32">now we&amp;#39;d be very happy to get that down</text><text start="2324.32" dur="4.08">to zero on both ends</text><text start="2326.24" dur="5.599">but there&amp;#39;s a lot of reasons we don&amp;#39;t if</text><text start="2328.4" dur="6.719">we take a look at some of these issues</text><text start="2331.839" dur="3.28">and if we sort them by</text><text start="2335.2" dur="3.6">at least recently updated let&amp;#39;s say and</text><text start="2337.839" dur="3.601">we look at</text><text start="2338.8" dur="4.48">something that some of these issues from</text><text start="2341.44" dur="4.58">six years ago or from</text><text start="2343.28" dur="4.96">or from for from quite a long time ago</text><text start="2346.02" dur="3.98">[Music]</text><text start="2348.24" dur="4.08">the reason that we haven&amp;#39;t solved these</text><text start="2350" dur="5.119">issues is we don&amp;#39;t really know how</text><text start="2352.32" dur="4.4">as i said we&amp;#39;re very careful about not</text><text start="2355.119" dur="2.96">breaking things in numpy and a lot of</text><text start="2356.72" dur="3.6">these issues</text><text start="2358.079" dur="6.561">are good ideas but they would change the</text><text start="2360.32" dur="4.32">way numpy works and so we can&amp;#39;t do them</text><text start="2365.2" dur="2.96">same thing with the pull requests we</text><text start="2366.8" dur="3.12">have pull requests that have been opened</text><text start="2368.16" dur="5.679">for way too long</text><text start="2369.92" dur="5.919">if i sort them by least recently updated</text><text start="2373.839" dur="3.921">we can see there are pull requests from</text><text start="2375.839" dur="3.841">five four years ago</text><text start="2377.76" dur="4.16">that can&amp;#39;t be done because they&amp;#39;re</text><text start="2379.68" dur="4">enhancements that will break things that</text><text start="2381.92" dur="4.88">currently work in numpy</text><text start="2383.68" dur="4.88">or that we don&amp;#39;t know how to do so a</text><text start="2386.8" dur="4.559">good place to look for issues</text><text start="2388.56" dur="3.68">is either to go to the center of the</text><text start="2391.359" dur="4">issue</text><text start="2392.24" dur="3.839">stack not the ones that are a week old</text><text start="2395.359" dur="2.801">because people</text><text start="2396.079" dur="3.52">jump on those pretty quick and not the</text><text start="2398.16" dur="2.8">ones that are very old because the</text><text start="2399.599" dur="2.881">reason they&amp;#39;re there is there are two</text><text start="2400.96" dur="3.119">that we can&amp;#39;t fix them</text><text start="2402.48" dur="5.359">but to look at ones that are maybe three</text><text start="2404.079" dur="6.561">or four months old or maybe a year old</text><text start="2407.839" dur="4.721">okay let&amp;#39;s take a look at how if you&amp;#39;re</text><text start="2410.64" dur="3.92">the one who jumps on the issue first</text><text start="2412.56" dur="3.36">how that all might how you might</text><text start="2414.56" dur="4.4">actually attack it</text><text start="2415.92" dur="3.04">and try and fix it</text><text start="2419.04" dur="3.36">and this actually happened now we had a</text><text start="2421.04" dur="3.92">new contributor come along</text><text start="2422.4" dur="3.12">and pick up this issue that someone</text><text start="2424.96" dur="4">posted</text><text start="2425.52" dur="5.44">a little about three weeks ago and the</text><text start="2428.96" dur="3.6">uh and we&amp;#39;ll try and take a look at what</text><text start="2430.96" dur="5.84">this person did to</text><text start="2432.56" dur="4.24">push this issue and and try and fix it</text><text start="2437.119" dur="3.361">so this is how an issue looks when it</text><text start="2439.76" dur="3.76">first comes</text><text start="2440.48" dur="5.68">through the the pipeline uh new user</text><text start="2443.52" dur="3.68">user comes up and says hey something&amp;#39;s</text><text start="2446.16" dur="3.199">wrong</text><text start="2447.2" dur="3.68">uh and they&amp;#39;re trying to their best to</text><text start="2449.359" dur="2.161">give a description of actually what&amp;#39;s</text><text start="2450.88" dur="2">wrong</text><text start="2451.52" dur="2.799">so one of the first things you have to</text><text start="2452.88" dur="2.16">do when you when you&amp;#39;re triaging an</text><text start="2454.319" dur="3.04">issue</text><text start="2455.04" dur="3.52">is look at it and try and figure out</text><text start="2457.359" dur="3.201">what&amp;#39;s going on here</text><text start="2458.56" dur="4.64">what is the person actually trying to</text><text start="2460.56" dur="4.64">convey to the number developers</text><text start="2463.2" dur="3.68">and one thing you might notice in this</text><text start="2465.2" dur="4.48">issue is that it</text><text start="2466.88" dur="3.6">it&amp;#39;s not quite formatted correctly the</text><text start="2469.68" dur="4.159">user doesn&amp;#39;t</text><text start="2470.48" dur="8.4">actually didn&amp;#39;t actually use the git</text><text start="2473.839" dur="5.041">git hub markdown</text><text start="2478.96" dur="3.6">code formatting format to format their</text><text start="2481.839" dur="2.161">issue</text><text start="2482.56" dur="3.84">and so let&amp;#39;s help them out that&amp;#39;s</text><text start="2484" dur="6">something we can do as a triager is to</text><text start="2486.4" dur="5.84">reformat their comments and now</text><text start="2490" dur="4.16">we can actually see what what the</text><text start="2492.24" dur="4">problem is what&amp;#39;s going on here okay</text><text start="2494.16" dur="2.88">they do import numpy as np that&amp;#39;s pretty</text><text start="2496.24" dur="2.64">clear</text><text start="2497.04" dur="3.76">print out the version that&amp;#39;s one</text><text start="2498.88" dur="5.04">eighteen five</text><text start="2500.8" dur="6.64">and then they do array three equals</text><text start="2503.92" dur="4.72">np dot a range parentheses start equals</text><text start="2507.44" dur="3.36">five</text><text start="2508.64" dur="4.56">and they print out array three so that</text><text start="2510.8" dur="4.88">would be this line</text><text start="2513.2" dur="5.28">anybody see anything strange here see</text><text start="2515.68" dur="2.8">what the problem is</text><text start="2519.44" dur="7.04">okay we asked for start equals five</text><text start="2523.359" dur="6.72">what numpy did was stop equals five</text><text start="2526.48" dur="5.52">well that looks bad okay if i ask for</text><text start="2530.079" dur="5.441">stop equals eight</text><text start="2532" dur="6.319">then numpy will um output an error</text><text start="2535.52" dur="4.48">that the required argument start is</text><text start="2538.319" dur="3.841">missing</text><text start="2540" dur="3.76">if you don&amp;#39;t put anything in a range if</text><text start="2542.16" dur="2.48">we go over to the documentation look at</text><text start="2543.76" dur="2.24">it i don&amp;#39;t want to do that because i</text><text start="2544.64" dur="3.439">don&amp;#39;t want to make you guys dizzy with</text><text start="2546" dur="4.079">flipping all my tabs around all the time</text><text start="2548.079" dur="3.681">you&amp;#39;ll see that you can do a range open</text><text start="2550.079" dur="3.04">parentheses close parentheses with</text><text start="2551.76" dur="4">nothing in the middle</text><text start="2553.119" dur="3.361">and it will um also yell at you that</text><text start="2555.76" dur="3.28">that the</text><text start="2556.48" dur="4.08">uh that the start argument is missing</text><text start="2559.04" dur="5.12">but if you put in one number</text><text start="2560.56" dur="5.519">a range 8 for instance that we will get</text><text start="2564.16" dur="4.08">that will get translated to stop</text><text start="2566.079" dur="3.04">and that will print out zero one two</text><text start="2568.24" dur="4.4">three four five</text><text start="2569.119" dur="6.321">six seven eight values</text><text start="2572.64" dur="4.8">okay so we&amp;#39;ve kind of understood what</text><text start="2575.44" dur="2.56">this issue is about there&amp;#39;s two problems</text><text start="2577.44" dur="2.96">here one</text><text start="2578" dur="3.76">is that for some reason start is being</text><text start="2580.4" dur="4.08">interpreted as stop</text><text start="2581.76" dur="3.04">and the other less critical problem is</text><text start="2584.48" dur="3.359">that</text><text start="2584.8" dur="6.799">stop is is when stop alone is put in</text><text start="2587.839" dur="6.801">there is no start equals zero</text><text start="2591.599" dur="4.48">okay so people started commenting you&amp;#39;ll</text><text start="2594.64" dur="2.479">see how long it took for someone to</text><text start="2596.079" dur="4.24">start commenting was</text><text start="2597.119" dur="5.761">actually no time at all on the same day</text><text start="2600.319" dur="3.28">someone had already commented and the</text><text start="2602.88" dur="4">person</text><text start="2603.599" dur="5.121">came back and and uh commented again</text><text start="2606.88" dur="3.28">and then someone actually tried to look</text><text start="2608.72" dur="5.92">through the code to see when this</text><text start="2610.16" dur="6.4">when this broke and then uh</text><text start="2614.64" dur="4.64">we discovered that actually it&amp;#39;s not a</text><text start="2616.56" dur="4.24">regression this code has been that way</text><text start="2619.28" dur="3.92">for 20 years and no one&amp;#39;s ever</text><text start="2620.8" dur="2.4">discovered</text><text start="2623.599" dur="5.601">so um because of this comment here that</text><text start="2627.359" dur="3.921">might be a nice thing for some newcomer</text><text start="2629.2" dur="4.879">to work on a newcomer actually</text><text start="2631.28" dur="3.6">picked this code up and started working</text><text start="2634.079" dur="2.881">on it</text><text start="2634.88" dur="4.719">and we can see that because later on in</text><text start="2636.96" dur="4.72">the uh issue</text><text start="2639.599" dur="4">in the flow of the issue there&amp;#39;s</text><text start="2641.68" dur="4.56">actually a pull request here</text><text start="2643.599" dur="6.24">that comes to fix this so let&amp;#39;s take a</text><text start="2646.24" dur="3.599">look at the pro request</text><text start="2650.72" dur="3.92">the first thing we see in the pull</text><text start="2652" dur="3.04">request is that it says it links back to</text><text start="2654.64" dur="3.439">the</text><text start="2655.04" dur="5.279">actual issue itself that&amp;#39;s the way that</text><text start="2658.079" dur="3.52">nice little link showed up in the issue</text><text start="2660.319" dur="4.401">was because this</text><text start="2661.599" dur="6.081">pull request actually said i fix issue</text><text start="2664.72" dur="4.879">i&amp;#39;m related to issue 17764.</text><text start="2667.68" dur="3.12">so that&amp;#39;s pretty important when you</text><text start="2669.599" dur="3.041">create a pull request</text><text start="2670.8" dur="3.12">it kind of marks your territory it says</text><text start="2672.64" dur="3.52">i&amp;#39;m working on this issue</text><text start="2673.92" dur="4.24">please don&amp;#39;t also submit a pro request</text><text start="2676.16" dur="5.84">to fix it</text><text start="2678.16" dur="4.64">okay um and what is the full what does</text><text start="2682" dur="3.52">the pull request</text><text start="2682.8" dur="3.039">actually comprise what&amp;#39;s in it there are</text><text start="2685.52" dur="3.36">two</text><text start="2685.839" dur="4">two files that changed okay we&amp;#39;ll not</text><text start="2688.88" dur="4.719">look at the let&amp;#39;s look</text><text start="2689.839" dur="6.48">first at the second file that changed</text><text start="2693.599" dur="4.561">which was the test so the first thing</text><text start="2696.319" dur="3.121">that this person did was write a very</text><text start="2698.16" dur="4.72">nice test</text><text start="2699.44" dur="6.48">of all the different things that are</text><text start="2702.88" dur="4.719">currently untested in um a range</text><text start="2705.92" dur="4.96">for instance there was no test that a</text><text start="2707.599" dur="5.041">range without any values</text><text start="2710.88" dur="4.8">[Music]</text><text start="2712.64" dur="4.08">comes out clean there was no test for</text><text start="2715.68" dur="4.08">step equals</text><text start="2716.72" dur="6.16">3 which is also an error and</text><text start="2719.76" dur="5.28">uh and and so forth and so this is the</text><text start="2722.88" dur="5.65">actual test for the issue that the uh</text><text start="2725.04" dur="5.44">that the reporter raised um</text><text start="2728.53" dur="3.87">[Music]</text><text start="2730.48" dur="4.56">and if you would run if we would</text><text start="2732.4" dur="5.6">actually uh check out this branch</text><text start="2735.04" dur="4">with only these tests in our in our uh</text><text start="2738" dur="2.72">in our repo</text><text start="2739.04" dur="4.079">and run the tests we would see that they</text><text start="2740.72" dur="5.52">would fail so the next thing</text><text start="2743.119" dur="6.96">the the person had to do was find out</text><text start="2746.24" dur="5.2">where actually is a range implemented</text><text start="2750.079" dur="2.801">and i&amp;#39;ll just go into that in two</text><text start="2751.44" dur="2.19">minutes because i&amp;#39;m kind of running out</text><text start="2752.88" dur="2">of time here</text><text start="2753.63" dur="8.209">[Music]</text><text start="2754.88" dur="6.959">but um if we go back to the code</text><text start="2762.24" dur="4.64">let&amp;#39;s go back into the code into the</text><text start="2764.48" dur="2.4">source</text><text start="2768.079" dur="5.28">into the core into the source</text><text start="2771.52" dur="5.36">and into multi array which i said was</text><text start="2773.359" dur="6.48">where code where most the code lives</text><text start="2776.88" dur="4.21">there&amp;#39;s one file that&amp;#39;s called</text><text start="2779.839" dur="3.841">multiarray module</text><text start="2781.09" dur="7.07">[Music]</text><text start="2783.68" dur="8.48">and if we look in this file</text><text start="2788.16" dur="8">for for a range with</text><text start="2792.16" dur="6.8">double quotes around it we&amp;#39;ll see</text><text start="2796.16" dur="3.52">that somewhere along the line way deep</text><text start="2798.96" dur="3.52">in the 4</text><text start="2799.68" dur="3.679">000 lines of this file there is a</text><text start="2802.48" dur="4.32">dictionary</text><text start="2803.359" dur="7.201">that maps um names</text><text start="2806.8" dur="6.24">like a range to functions uh like a</text><text start="2810.56" dur="5.039">array a range nested in theirs is</text><text start="2813.04" dur="5.68">another function it&amp;#39;s mapped to</text><text start="2815.599" dur="5.681">npy iter nested hitter</text><text start="2818.72" dur="3.52">so let&amp;#39;s try and see how this function</text><text start="2821.28" dur="3.6">actually looks</text><text start="2822.24" dur="3.839">is this where we want to be and i&amp;#39;ll</text><text start="2824.88" dur="4.64">just finish out this</text><text start="2826.079" dur="4.561">this piece quickly by not by confusing</text><text start="2829.52" dur="3.839">you too much with the c</text><text start="2830.64" dur="4.32">code but by saying that well this looks</text><text start="2833.359" dur="4.801">like the right place because this is</text><text start="2834.96" dur="4.159">has a function in it called parse tuple</text><text start="2838.16" dur="3.04">and keywords</text><text start="2839.119" dur="3.521">so that&amp;#39;s probably what&amp;#39;s handling the</text><text start="2841.2" dur="3.119">input of this function</text><text start="2842.64" dur="4.16">this is the place we want to start</text><text start="2844.319" dur="6.561">looking around digging around to see</text><text start="2846.8" dur="4.08">where the actual bug might be</text><text start="2852.96" dur="6.879">okay and as i said it got complicated</text><text start="2856.839" dur="3">quickly</text><text start="2860.96" dur="3.599">that&amp;#39;s pretty much what i want to talk</text><text start="2862.48" dur="5.04">about um</text><text start="2864.559" dur="3.601">i&amp;#39;d like to take uh some q a now let&amp;#39;s</text><text start="2867.52" dur="2.4">see</text><text start="2868.16" dur="3.28">what we can do with that just to</text><text start="2869.92" dur="3.679">summarize</text><text start="2871.44" dur="3.36">my goal here was hopefully not to scare</text><text start="2873.599" dur="3.041">you off too much</text><text start="2874.8" dur="4.16">to convince you that numpy is a nice</text><text start="2876.64" dur="4.16">place to to help out with</text><text start="2878.96" dur="4.08">we could use help with documentation</text><text start="2880.8" dur="7.039">tutorials code and devops</text><text start="2883.04" dur="4.799">anything you contribute would be welcome</text><text start="2888.24" dur="6.56">and we don&amp;#39;t have any questions so</text><text start="2891.28" dur="6.88">now would be the time to ask questions</text><text start="2894.8" dur="6.24">or actually have another poll i&amp;#39;m going</text><text start="2898.16" dur="6.24">to put up another poll</text><text start="2901.04" dur="6.64">where is it the cued start polling</text><text start="2904.4" dur="4.08">to see how i did here if you could fill</text><text start="2907.68" dur="2.8">out the poll and</text><text start="2908.48" dur="3.2">tell me if you think you&amp;#39;re interested</text><text start="2910.48" dur="4.48">in contributing</text><text start="2911.68" dur="5.04">if you need help contributing we can</text><text start="2914.96" dur="3.599">help you out you can reach out to us</text><text start="2916.72" dur="4.399">either open an issue</text><text start="2918.559" dur="4.481">or comment on an issue or reach out to</text><text start="2921.119" dur="2.401">us on the mailing list or in some other</text><text start="2923.04" dur="2.16">way</text><text start="2923.52" dur="5.039">and say i&amp;#39;d like to get involved i need</text><text start="2925.2" dur="5.119">a little bit of help to get started</text><text start="2928.559" dur="3.28">we&amp;#39;re happy to mentor people at the</text><text start="2930.319" dur="5.441">beginning and</text><text start="2931.839" dur="3.921">get them started with with the project</text><text start="2938.24" dur="5.92">yeah so that&amp;#39;s pretty much what i wanted</text><text start="2943.119" dur="3.521">to say</text><text start="2944.16" dur="5.439">if there&amp;#39;s no questions and there&amp;#39;s uh</text><text start="2946.64" dur="6.08">no comments on the chat that i missed</text><text start="2949.599" dur="3.841">rasheeda i think i&amp;#39;ll shima sorry i</text><text start="2952.72" dur="5.119">think i&amp;#39;ll</text><text start="2953.44" dur="4.399">uh send it back to you</text><text start="2975.44" dur="7.2">question about gdb could you go over</text><text start="2978.48" dur="4.16">briefly ways to use gdb with numpy</text><text start="2982.88" dur="6.32">so brian are you using windows or linux</text><text start="2990.88" dur="5.36">i can show you in linux i can&amp;#39;t really</text><text start="2993.44" dur="2.8">show you in windows</text><text start="2996.839" dur="5.24">so did my</text><text start="2999.04" dur="5.92">uh my screen made itself</text><text start="3002.079" dur="4.721">smaller let me make this font bigger the</text><text start="3004.96" dur="4.72">best way to work with gdb</text><text start="3006.8" dur="3.6">in linux is you actually need to build a</text><text start="3009.68" dur="3.679">debug</text><text start="3010.4" dur="3.6">build of of numpy so the way to do that</text><text start="3013.359" dur="3.841">is to</text><text start="3014" dur="5.839">clean it all out get clean</text><text start="3017.2" dur="4.96">xfd that cleans out all the files that</text><text start="3019.839" dur="5.041">we built</text><text start="3022.16" dur="4">and when we where we ran build tests</text><text start="3024.88" dur="1.76">before and now we&amp;#39;re going to set up</text><text start="3026.16" dur="4">some c</text><text start="3026.64" dur="4.64">flags to do now this works on my</text><text start="3030.16" dur="3.04">computer</text><text start="3031.28" dur="4.4">um i&amp;#39;ve heard it doesn&amp;#39;t work in other</text><text start="3033.2" dur="2.48">places</text><text start="3035.839" dur="6.961">o o minus g three</text><text start="3039.76" dur="5.12">so these flags are that&amp;#39;s a capital o</text><text start="3042.8" dur="4.24">capital o and then a zero that means</text><text start="3044.88" dur="5.84">don&amp;#39;t do any optimizations</text><text start="3047.04" dur="6.88">g3 means take care of all the macros</text><text start="3050.72" dur="3.92">um that you want don&amp;#39;t turn any of them</text><text start="3053.92" dur="2.8">don&amp;#39;t</text><text start="3054.64" dur="4.08">inline any of the macros and show me all</text><text start="3056.72" dur="5.28">of the values for</text><text start="3058.72" dur="3.92">c macros so now i can i don&amp;#39;t want to</text><text start="3062" dur="3.28">actually</text><text start="3062.64" dur="4.199">run the tests i just want to build numpy</text><text start="3065.28" dur="4">so i will do run</text><text start="3066.839" dur="5.561">tests py</text><text start="3069.28" dur="4.72">minus b which is build only this will</text><text start="3072.4" dur="4.959">build a debug version</text><text start="3074" dur="5.04">of numpy and i&amp;#39;ll answer some other</text><text start="3077.359" dur="4.161">questions and i&amp;#39;ll show you</text><text start="3079.04" dur="4.72">before i show you how to get into it</text><text start="3081.52" dur="4.72">while it&amp;#39;s building</text><text start="3083.76" dur="5.04">do we need to be familiar with c</text><text start="3086.24" dur="6">language in order to contribute to numpy</text><text start="3088.8" dur="6.48">you don&amp;#39;t it helps</text><text start="3092.24" dur="6.879">a lot of the code is written in c</text><text start="3095.28" dur="7.2">and a lot of the a lot of the</text><text start="3099.119" dur="6.321">kind of bent of the code reflects c</text><text start="3102.48" dur="3.28">up in the python language so things like</text><text start="3105.44" dur="3.6">d</text><text start="3105.76" dur="4.24">types really take a c kind of mind in</text><text start="3109.04" dur="3.039">order to understand</text><text start="3110" dur="4.079">why all of a sudden my d type is</text><text start="3112.079" dur="3.601">overflowing or my d type isn&amp;#39;t behaving</text><text start="3114.079" dur="3.361">the way i want it to</text><text start="3115.68" dur="4.08">but like i said we could use help with</text><text start="3117.44" dur="5.6">documentation with tutorials</text><text start="3119.76" dur="7.12">with dev op kind of things as well</text><text start="3123.04" dur="5.84">as uh code itself</text><text start="3126.88" dur="3.36">would be very happy to to help people</text><text start="3128.88" dur="4.4">work around i&amp;#39;ll be</text><text start="3130.24" dur="4.319">very happy also to work with people who</text><text start="3133.28" dur="3.68">don&amp;#39;t know c</text><text start="3134.559" dur="4.721">and to improve our documentation and our</text><text start="3136.96" dur="3.76">onboarding system so that we&amp;#39;ll be more</text><text start="3139.28" dur="6.4">friendly to people who don&amp;#39;t know</text><text start="3140.72" dur="7.04">c okay so but i&amp;#39;ll go back to c</text><text start="3145.68" dur="3.76">because of to answer brian&amp;#39;s question so</text><text start="3147.76" dur="4.72">the next thing you need to do is do</text><text start="3149.44" dur="6.32">gdb um</text><text start="3152.48" dur="6.8">minus minus args python</text><text start="3155.76" dur="6.079">run tests py</text><text start="3159.28" dur="3.92">minus minus python which is what i said</text><text start="3161.839" dur="4.24">before is a way you can</text><text start="3163.2" dur="4.639">get this whole thing to run under python</text><text start="3166.079" dur="5.601">and now we&amp;#39;ve opened up a gdb</text><text start="3167.839" dur="3.841">session we can tell it to run</text><text start="3172.559" dur="6.481">it&amp;#39;s now running python</text><text start="3175.839" dur="4.801">under gdb okay so we&amp;#39;ve got a python</text><text start="3179.04" dur="4.18">prompt we can do import</text><text start="3180.64" dur="5.04">numpy as</text><text start="3183.22" dur="5.82">[Music]</text><text start="3185.68" dur="6.639">np numpy</text><text start="3189.04" dur="5.45">a3 equals a range to get back to the bug</text><text start="3192.319" dur="3.52">that we were looking at</text><text start="3194.49" dur="5.19">[Music]</text><text start="3195.839" dur="3.841">start equals three</text><text start="3200.96" dur="5.92">never live code okay</text><text start="3204.48" dur="4.079">and now we can stop if we i&amp;#39;m going to</text><text start="3206.88" dur="4">hit ctrl c</text><text start="3208.559" dur="3.52">ctrl c will bring me into the debugger</text><text start="3210.88" dur="5.439">and i&amp;#39;ll say break</text><text start="3212.079" dur="6.561">at array a range</text><text start="3216.319" dur="3.921">it no i did a tab to complete the the</text><text start="3218.64" dur="4.08">line</text><text start="3220.24" dur="3.92">it sets a breakpoint because i compiled</text><text start="3222.72" dur="4.639">with the debug</text><text start="3224.16" dur="4.8">version and now if i tell it to continue</text><text start="3227.359" dur="4.72">running</text><text start="3228.96" dur="6">no until to continue</text><text start="3232.079" dur="4.161">and i&amp;#39;ll hit that code again i have now</text><text start="3234.96" dur="4.96">stopped in the debugger</text><text start="3236.24" dur="5.44">at the uh array a range function</text><text start="3239.92" dur="3.12">i think that&amp;#39;s enough with gdb for</text><text start="3241.68" dur="2.639">people who know gdp</text><text start="3243.04" dur="2.96">this is enough to get you going for</text><text start="3244.319" dur="3.121">people who don&amp;#39;t they were really bored</text><text start="3246" dur="5.839">from the past three minutes</text><text start="3247.44" dur="4.399">so good</text><text start="3255.2" dur="2.879">more questions</text><text start="3258.319" dur="3.921">chats i&amp;#39;m on linux</text><text start="3263.68" dur="5.52">uh so okay someone says they use gdb</text><text start="3266.72" dur="2.93">from sea lion</text><text start="3269.2" dur="4.159">um</text><text start="3269.65" dur="5.15">[Music]</text><text start="3273.359" dur="4.401">yep and there&amp;#39;s some other good answers</text><text start="3274.8" dur="4.4">in the chat about uh</text><text start="3277.76" dur="2.97">pure python things that could be</text><text start="3279.2" dur="4.789">improved</text><text start="3280.73" dur="3.259">[Music]</text><text start="3290.839" dur="3">great</text><text start="3296.559" dur="3.681">any more questions anymore</text><text start="3304.4" dur="4.08">maddie this was such a great talk i</text><text start="3307.2" dur="3.44">can&amp;#39;t over</text><text start="3308.48" dur="3.2">overstate like how informative and</text><text start="3310.64" dur="3.199">useful it is</text><text start="3311.68" dur="3.439">on so many levels not just for numpy but</text><text start="3313.839" dur="3.921">for python for</text><text start="3315.119" dur="3.68">debugging for open source for the</text><text start="3317.76" dur="4.079">history</text><text start="3318.799" dur="6.241">of it all it was really just um amazing</text><text start="3321.839" dur="6.321">really thank you so much thank you i&amp;#39;ll</text><text start="3325.04" dur="5.12">stop sharing my screen</text><text start="3328.16" dur="3.6">and um you know that this has actually</text><text start="3330.16" dur="5.84">gotten me excited about</text><text start="3331.76" dur="8.079">possibly doing a sprint with you</text><text start="3336" dur="5.92">great yeah like i said we really love to</text><text start="3339.839" dur="3.76">to onboard new people you know even if</text><text start="3341.92" dur="4.159">you on board and and you</text><text start="3343.599" dur="3.76">uh go somewhere else and work on some</text><text start="3346.079" dur="4">other library</text><text start="3347.359" dur="3.76">that&amp;#39;s fine you know that&amp;#39;s great yeah</text><text start="3350.079" dur="2.881">that is great</text><text start="3351.119" dur="3.521">um that&amp;#39;s sort of the you know the same</text><text start="3352.96" dur="3.119">thought i have with sky kit learn where</text><text start="3354.64" dur="2.719">i have organized a bunch of sprints</text><text start="3356.079" dur="2.881">which is like you know this is like for</text><text start="3357.359" dur="3.681">open source if you go and contribute to</text><text start="3358.96" dur="6.32">another library it&amp;#39;s still a success</text><text start="3361.04" dur="5.279">so um and a lot of this information is</text><text start="3365.28" dur="3.2">transferable</text><text start="3366.319" dur="3.76">with you know from one python library to</text><text start="3368.48" dur="2.96">another with like slight you know</text><text start="3370.079" dur="4.561">specific</text><text start="3371.44" dur="7.679">tweaks um</text><text start="3374.64" dur="7.6">okay so with that i will um</text><text start="3379.119" dur="5.281">i will end this this recording um</text><text start="3382.24" dur="4.079">will be made available within the next</text><text start="3384.4" dur="4">two to five days</text><text start="3386.319" dur="3.601">um there&amp;#39;s a comment here if you look at</text><text start="3388.4" dur="3.04">our docs for contributing and find them</text><text start="3389.92" dur="2.96">confused or incomplete we would also</text><text start="3391.44" dur="2.639">appreciate help there that&amp;#39;s from</text><text start="3392.88" dur="3.52">melissa</text><text start="3394.079" dur="4.321">um yes and actually what i will do also</text><text start="3396.4" dur="4.32">is there&amp;#39;s a bunch of links in this chat</text><text start="3398.4" dur="3.6">which i have access to later so i will</text><text start="3400.72" dur="3.839">copy all those links</text><text start="3402" dur="4.319">over to you know our transcript area so</text><text start="3404.559" dur="3.361">it&amp;#39;s available for people</text><text start="3406.319" dur="3.681">um when they&amp;#39;re viewing this recording</text><text start="3407.92" dur="3.679">later um again thank you</text><text start="3410" dur="3.04">maddie and also thank you to the whole</text><text start="3411.599" dur="3.52">numpai team i know</text><text start="3413.04" dur="3.6">there were you know there were a lot of</text><text start="3415.119" dur="4.081">other people um</text><text start="3416.64" dur="4.64">that that you had um collaborated with</text><text start="3419.2" dur="4">as well so thank you so much</text><text start="3421.28" dur="3.839">yeah bunch of them were in the chat so</text><text start="3423.2" dur="8.48">thanks guys for handling all the chat</text><text start="3425.119" dur="6.561">during the talk</text></transcript>